import { findFocusables } from "@udemy/design-system-utils";
import { Button } from "@udemy/react-core-components";
import React, { useState, useEffect } from "react";
import styles from "./skip-to-content-button.module.css";
/** React prop interface for SkipToButton component.  Extends {@link ButtonHtmlProps} */

/**
 * SkipToContentButton component
 *
 * @remarks
 * This is an accessibility tool that will allow a user who relies on keyboard navigation to skip over all the
 * superfluous links in the header to the main content of any given page.
 */
export const SkipToContentButton = (_ref) => {
  let {
    goToContentSelector,
    goToContentAnchorId = "main-content-anchor",
    label,
    ...buttonProps
  } = _ref;
  const [source, setSource] = useState("");
  useEffect(() => {
    setSource(window.location.pathname);
  }, []);

  const onSkipToContent = () => {
    const goToAnchorElement = document.getElementById(goToContentAnchorId);

    if (goToAnchorElement) {
      /* istanbul ignore next */
      goToAnchorElement.scrollIntoView({
        behavior: "smooth",
      });
    } else {
      const goToElement = document.querySelector(goToContentSelector);

      if (goToElement !== null) {
        const firstFocusable = findFocusables(goToElement)[0];
        /* istanbul ignore next */

        firstFocusable === null || firstFocusable === void 0
          ? void 0
          : firstFocusable.focus();
        /* istanbul ignore next */

        firstFocusable === null || firstFocusable === void 0
          ? void 0
          : firstFocusable.scrollIntoView({
              behavior: "smooth",
            }); // One cannot spy on a function on an element that does not exist, thus ignoring code coverage for these two lines.
        // A bug in babel & istanbul make it think preceding line is terminated with a semicolon, this this comment is here instead of above.
      }
    }
  };

  return /*#__PURE__*/ React.createElement(
    "div",
    {
      className: styles["skip-to-content"],
    },
    /*#__PURE__*/ React.createElement(
      Button,
      Object.assign(
        {
          className: styles["skip-to-content-btn"],
          onClick: onSkipToContent,
          componentClass: "a",
          href: `${source}#${goToContentAnchorId}`,
        },
        buttonProps
      ),
      /*#__PURE__*/ React.createElement("span", {
        "aria-hidden": "true",
        className: styles["skip-to-content-shadow"],
      }),
      /*#__PURE__*/ React.createElement(
        "span",
        {
          style: {
            margin: 0,
          },
        },
        label
      )
    )
  );
};
//# sourceMappingURL=skip-to-content-button.react-component.js.map
