import { Image } from "@udemy/react-core-components";
import classNames from "classnames";
import React, { createContext, useContext } from "react";
import styles from "./course-card-image.module.css";
const courseImageSizes = {
  small: {
    width: 64,
    height: 64,
  },
  medium: {
    width: 240,
    height: 135,
  },
  large: {
    width: 260,
    height: 145,
  },
};
/**
 * Context props for `CourseCardImage`.
 */

/**
 * Context for `CourseCardImage`. Optionally provide this context in a card to
 * signal layout to `CourseCardImage` instances rendered by consumers.
 */
export const CourseCardImageContext = /*#__PURE__*/ createContext({
  className: undefined,
  size: undefined,
});
/**
 * Props for `CourseCardImage` component.
 *
 * Includes all props from {@link @udemy/react-core-components#ImageProps | `ImageProps`}.
 */

/**
 * Image for `CourseCard` component. Renders a square image when prop
 * `size` is `"small"`. Renders default image otherwise.
 *
 * @remarks
 *
 * `className` prop will be merged with built-in classes and applied to `Image`
 *
 * `Image` props `src`, `alt`, `srcSet`, `width`, `height` can be overwritten
 * manually via props, if necessary.
 */
export const CourseCardImage = (_ref) => {
  var _ref2;

  let {
    size: sizeProp,
    className = "",
    srcSmallSquare,
    srcSmallSquare2x,
    srcDefault,
    srcDefault2x,
    ...props
  } = _ref;
  const { size: courseCardSize, className: contextClassName } = useContext(
    CourseCardImageContext
  );
  const size =
    (_ref2 =
      sizeProp !== null && sizeProp !== void 0 ? sizeProp : courseCardSize) !==
      null && _ref2 !== void 0
      ? _ref2
      : "medium";
  const src = size === "small" ? srcSmallSquare : srcDefault;
  const src2x = size === "small" ? srcSmallSquare2x : srcDefault2x;
  const imageSize = courseImageSizes[size]; // Because the image is decorative, set an empty `alt` attribute.
  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/alt

  return /*#__PURE__*/ React.createElement(
    Image,
    Object.assign(
      {
        src: src,
        alt: "",
        srcSet: `${src} 1x, ${src2x} 2x`,
        className: classNames(styles.image, contextClassName, className),
      },
      imageSize,
      props
    )
  );
};
//# sourceMappingURL=course-card-image.react-component.js.map
