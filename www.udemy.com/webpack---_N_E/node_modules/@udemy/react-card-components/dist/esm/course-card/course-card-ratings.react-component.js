import { useI18n, useFormatNumber } from "@udemy/i18n";
import { StarRating } from "@udemy/react-merchandising-components";
import classNames from "classnames";
import React from "react";
import styles from "./course-card-ratings.module.css";
/**
 * Interpolates text for ARIA label for number of reviews.
 *
 * @param reviewsCount - number of reviews
 * @param i18n - includes i18n function `ninterpolate`
 */

export function reviewsCountAriaLabel(reviewsCount, _ref) {
  let { ninterpolate } = _ref;
  return ninterpolate("%(count)s review", "%(count)s reviews", reviewsCount, {
    count: reviewsCount,
  });
}
/**
 * Props for `CourseCardRatings` component.
 */

/**
 * Ratings component for `CourseCard`. Renders `StarRating` and number of reviews.
 *
 * @remarks
 *
 * Will render nothing if there are no `children` and `rating` is `0`.
 */
export const CourseCardRatings = (_ref2) => {
  let { reviewsCountText, reviewsCount, rating, children } = _ref2;
  const { ninterpolate } = useI18n();
  const { formatNumber } = useFormatNumber();

  if (!rating && !children) {
    return null;
  } // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing

  const reviewsCountTextFinal = reviewsCountText || formatNumber(reviewsCount);
  return /*#__PURE__*/ React.createElement(
    "div",
    {
      className: styles.row,
    },
    !!rating &&
      /*#__PURE__*/ React.createElement(
        React.Fragment,
        null,
        /*#__PURE__*/ React.createElement(StarRating, {
          showNumber: true,
          rating: rating,
        }),
        /*#__PURE__*/ React.createElement(
          "span",
          {
            "aria-label": reviewsCountAriaLabel(reviewsCount, {
              ninterpolate,
            }),
            className: classNames("ud-text-xs", styles["reviews-text"]),
          },
          `(${reviewsCountTextFinal})`
        )
      ),
    children
  );
};
//# sourceMappingURL=course-card-ratings.react-component.js.map
