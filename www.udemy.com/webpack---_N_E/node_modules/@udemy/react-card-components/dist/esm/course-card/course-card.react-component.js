import { useMatchMedia } from "@udemy/hooks";
import { safelySetInnerHTML } from "@udemy/shared-utils";
import classNames from "classnames";
import React from "react";
import { CourseCardBadges } from "./course-card-badges.react-component";
import { CourseCardDetails } from "./course-card-details.react-component";
import {
  CourseCardImage,
  CourseCardImageContext,
} from "./course-card-image.react-component";
import { CourseCardInstructors } from "./course-card-instructors.react-component";
import {
  CourseCardPrice,
  CourseCardPriceContext,
} from "./course-card-price.react-component";
import { CourseCardRatings } from "./course-card-ratings.react-component";
import {
  CourseCardTitle,
  CourseCardTitleContext,
} from "./course-card-title.react-component";
import styles from "./course-card.module.css";
/**
 * Style props for `StaticPriceText` and `DynamicPriceText` components to make
 * it more convenient to use those components as price text.
 *
 * @see Price text components
 * {@link @udemy/react-merchandising-components#StaticPriceText} and
 * {@link @udemy/react-merchandising-components#DynamicPriceText}
 *
 * @privateRemarks
 *
 * These classes are exported by this card component rather than the price sub-component
 * because they are used to manage layout at the card level.
 */

export const priceTextStyleProps = {
  className: styles["price-text-base-price-text-component"],
  listPriceClassName: styles["price-text-base-price-text-component-list-price"],
  discountPriceClassName:
    styles["price-text-base-price-text-component-discount-price"],
};
/**
 * Props for `CourseCard` component.
 *
 * @remarks
 *
 * Extends props for `<div>`, which are applied to the containing `<div>` element.
 *
 * @see `CourseCard` for description of sub-component slots specified in these props.
 */

/**
 * ### CourseCard
 *
 * Card component for a course.
 *
 * @remarks
 *
 * Forwards a `ref` to the containing `<div>` element.
 *
 * #### Slots
 *
 * The card is divided into distinct rendering areas ("slots"):
 * - badges
 * - details
 * - image
 * - instructors
 * - price
 * - ratings
 * - title
 *
 * Each slot has two props. One is for the props passed to a default
 * sub-component (e.g., `imageProps` for the image slot).
 * The other slot prop will completely override the slot nodes (e.g.,
 * `image`). If both props for a slot are specified, `CourseCard`
 * will render the override prop (e.g., `image`) instead of the
 * default component.
 *
 * Each slot is rendered independently, and is omitted by default.
 * This pattern allows for a mixing of default and custom rendering.
 */
export const CourseCard = Object.assign(
  /*#__PURE__*/ React.forwardRef((_ref, ref) => {
    let {
      badges,
      badgesProps,
      children,
      details,
      detailsProps,
      headline,
      image,
      imageProps,
      instructors,
      instructorsProps,
      price,
      priceProps,
      ratings,
      ratingsProps,
      title,
      titleProps,
      showDetails = true,
      size = "medium",
      width = "flexible",
      ...htmlProps
    } = _ref;
    const isSmallMinViewport = useMatchMedia("sm-min");
    const isWideLayout = size === "large" && isSmallMinViewport;
    const priceLayoutDirection = isWideLayout ? "vertical" : "horizontal";
    const renderedPrice =
      price ||
      (priceProps &&
        /*#__PURE__*/ React.createElement(CourseCardPrice, priceProps));
    const hasPrice = !!renderedPrice;
    return /*#__PURE__*/ React.createElement(
      "div",
      Object.assign({}, htmlProps, {
        "data-purpose": "container",
        className: classNames(
          htmlProps.className,
          styles.container,
          styles[size],
          {
            [styles.fixed]: width === "fixed",
          }
        ),
        ref: ref,
      }),
      /*#__PURE__*/ React.createElement(
        "div",
        {
          className: styles["image-container"],
        },
        /*#__PURE__*/ React.createElement(
          CourseCardImageContext.Provider,
          {
            value: {
              size,
              className: styles["course-image"],
            },
          },
          image ||
            (imageProps &&
              /*#__PURE__*/ React.createElement(CourseCardImage, imageProps))
        )
      ),
      /*#__PURE__*/ React.createElement(
        "div",
        {
          className: classNames(styles["main-content"], {
            [styles["has-price-text"]]: hasPrice,
          }),
        },
        /*#__PURE__*/ React.createElement(
          "div",
          {
            className: styles["title-container"],
          },
          /*#__PURE__*/ React.createElement(
            CourseCardTitleContext.Provider,
            {
              value: {
                size: size === "small" ? "small" : "medium",
              },
            },
            title ||
              (titleProps &&
                /*#__PURE__*/ React.createElement(CourseCardTitle, titleProps))
          )
        ),
        showDetails &&
          size === "large" &&
          headline &&
          /*#__PURE__*/ React.createElement(
            "p",
            Object.assign(
              {
                className: classNames("ud-text-sm", styles["course-headline"]),
              },
              safelySetInnerHTML({
                descriptionOfCaller: "course-card:course-headline",
                html: headline,
              })
            )
          ),
        instructors ||
          (instructorsProps &&
            /*#__PURE__*/ React.createElement(
              CourseCardInstructors,
              instructorsProps
            )),
        ratings ||
          (ratingsProps &&
            /*#__PURE__*/ React.createElement(CourseCardRatings, ratingsProps)),
        showDetails &&
          (details ||
            (detailsProps &&
              /*#__PURE__*/ React.createElement(
                CourseCardDetails,
                detailsProps
              ))),
        /*#__PURE__*/ React.createElement(
          "div",
          {
            className: styles["price-text-container"],
          },
          /*#__PURE__*/ React.createElement(
            CourseCardPriceContext.Provider,
            {
              value: {
                layoutDirection: priceLayoutDirection,
              },
            },
            renderedPrice
          )
        ),
        /*#__PURE__*/ React.createElement(
          "div",
          {
            className: styles["badges-container"],
          },
          badges ||
            (badgesProps &&
              /*#__PURE__*/ React.createElement(CourseCardBadges, badgesProps))
        ),
        children
      )
    );
  }),
  {
    /* eslint-disable @typescript-eslint/naming-convention */
    Badges: CourseCardBadges,
    Details: CourseCardDetails,
    Image: CourseCardImage,
    Instructors: CourseCardInstructors,
    Price: CourseCardPrice,
    Ratings: CourseCardRatings,
    Title: CourseCardTitle,
    /* eslint-enable @typescript-eslint/naming-convention */
  }
);
//# sourceMappingURL=course-card.react-component.js.map
