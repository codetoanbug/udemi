import { useI18n } from "@udemy/i18n";
import classNames from "classnames";
import React, { createContext, useContext } from "react";
import styles from "./course-card-price.module.css";
/**
 * Context props for `CourseCardPrice`.
 */

/**
 * Context for `CourseCardPrice`. Optionally provide this context in a card to
 * signal layout to `CourseCardPrice` instances rendered by consumers.
 */
export const CourseCardPriceContext = /*#__PURE__*/ createContext({
  layoutDirection: undefined,
});
/**
 * Props for `CourseCardPrice` component.
 */

/**
 * Price content for `CourseCard`.
 *
 * @remarks
 *
 * For simple rendering, use `priceText` and `formerPriceText` props.
 *
 * `children` can also be used to render common price text components,
 * {@link @udemy/react-merchandising-components#StaticPriceText} and
 * {@link @udemy/react-merchandising-components#DynamicPriceText}.
 * `priceTextStyleProps` is exported to make it easier to use those two price
 * text components within this slot. It will apply extra style definitions
 * needed for different card sizes.
 */
export const CourseCardPrice = (_ref) => {
  let { priceText, children, formerPriceText, layoutDirection } = _ref;
  const { gettext } = useI18n(); // Layout direction prop takes precedence over context

  const { layoutDirection: layoutDirectionContext } = useContext(
    CourseCardPriceContext
  );
  const isDirectionVertical =
    (layoutDirection !== null && layoutDirection !== void 0
      ? layoutDirection
      : layoutDirectionContext) === "vertical";
  return /*#__PURE__*/ React.createElement(
    "div",
    {
      className: classNames(styles.container, {
        [styles["layout-vertical"]]: isDirectionVertical,
      }),
    },
    priceText &&
      /*#__PURE__*/ React.createElement(
        "div",
        {
          className: classNames(
            "ud-heading-md",
            styles["price-text-amount"],
            styles["price-text-amount-current"]
          ),
        },
        /*#__PURE__*/ React.createElement(
          "span",
          {
            className: "ud-sr-only",
          },
          gettext("Current Price")
        ),
        /*#__PURE__*/ React.createElement("strong", null, priceText)
      ),
    formerPriceText &&
      /*#__PURE__*/ React.createElement(
        "div",
        {
          className: classNames(
            "ud-text-sm",
            styles["price-text-amount"],
            styles["price-text-amount-former"]
          ),
        },
        /*#__PURE__*/ React.createElement(
          "span",
          {
            className: "ud-sr-only",
          },
          gettext("Original Price")
        ),
        /*#__PURE__*/ React.createElement("s", null, formerPriceText)
      ),
    children
  );
};
//# sourceMappingURL=course-card-price.react-component.js.map
