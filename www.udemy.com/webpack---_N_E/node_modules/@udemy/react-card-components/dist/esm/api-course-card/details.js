import { useI18n } from "@udemy/i18n";
import React from "react";
/* see 'browse/types/course' */

/**
 * Interpolate number of lectures
 *
 * @param numLectures - number of lectures to interpolate
 * @param i18n - `ninterpolate` function from @udemy/i18n
 */
export function getNumLecturesText(numLectures, _ref) {
  let { ninterpolate } = _ref;
  return ninterpolate("%s lecture", "%s lectures", numLectures);
}

const NumLectureText = (_ref2) => {
  let { numLectures } = _ref2;
  const { ninterpolate } = useI18n();
  return /*#__PURE__*/ React.createElement(
    React.Fragment,
    null,
    getNumLecturesText(numLectures, {
      ninterpolate,
    })
  );
};
/**
 * Definitions of default course card details sub-components.
 *
 * @remarks
 *
 * Use this object to access and render _individual_ details nodes.
 * If you want to render them all, use the convenience function
 * `getDefaultCourseMetadata`
 */

export const apiCourseCardDetailMetadata = {
  contentInfo: (course) =>
    course.content_info
      ? /*#__PURE__*/ React.createElement(
          React.Fragment,
          null,
          course.content_info
        )
      : null,
  publishedLectures: (course) =>
    course.num_published_lectures > 0
      ? /*#__PURE__*/ React.createElement(NumLectureText, {
          numLectures: course.num_published_lectures,
        })
      : null,
  instructorLevel: (course) =>
    course.instructional_level_simple
      ? /*#__PURE__*/ React.createElement(
          React.Fragment,
          null,
          course.instructional_level_simple
        )
      : null,
};
/**
 * Convenience function to render default course card details sub-component nodes.
 *
 * @remarks
 *
 * The array of nodes can be passed directly as the `metadata` prop to
 * {@link @udemy/react-card-components#CourseCardDetails}, or you can re-order them,
 * or insert custom nodes to be rendered among the metadata in the details component.
 *
 * @param course - object including all props required by default metadata components
 * @returns array of course details metadata nodes
 */

export const getDefaultCourseCardMetadata = (course) => {
  return [
    apiCourseCardDetailMetadata.contentInfo(course),
    apiCourseCardDetailMetadata.publishedLectures(course),
    apiCourseCardDetailMetadata.instructorLevel(course),
  ];
};
/**
 * Converts Course API fields for default metadata components into
 * `CourseCard` details props.
 *
 * @remarks
 *
 * @see `browse/types/course`
 */

export const detailsPropsFrom = (_ref3) => {
  let { course } = _ref3;
  return {
    metadata: getDefaultCourseCardMetadata(course),
  };
};
//# sourceMappingURL=details.js.map
