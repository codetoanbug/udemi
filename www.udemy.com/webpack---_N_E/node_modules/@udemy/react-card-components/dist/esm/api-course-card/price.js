import { priceTextStyleProps } from "../course-card";
/** A subset of Price from cart */

/**
 * Convert Course API price fields to props suitable for `StaticPriceText` or
 * `DynamicPriceText`.
 *
 * @param course - Course API course object
 * @returns props for `StaticPriceText` or `DynamicPriceText`
 */
export function getPriceInfo(_ref) {
  let { discount, price_detail: priceDetail } = _ref;
  // Assert arguments to parseFloat as strings, even though they'll be numbers.
  // parseFloat will coerce numbers into strings before parsing:
  // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseFloat
  const listPrice = priceDetail ? parseFloat(priceDetail.amount) : 0;
  const listPriceString = priceDetail ? priceDetail.price_string : undefined;
  const discountPrice = discount
    ? parseFloat(discount.price.amount)
    : listPrice;
  const discountPriceString = discount
    ? discount.price.price_string
    : listPriceString;
  return {
    discountPrice,
    discountPriceString,
    listPrice,
    listPriceString,
  };
}
/**
 * Converts Course API fields to `CourseCard` price props.
 *
 * @remarks
 *
 * @see `browse/types/course`
 */

export const pricePropsFrom = (_ref2) => {
  let {
    course: {
      /* eslint-disable @typescript-eslint/naming-convention */
      price_detail,
      discount,
    },
    priceTextProps,
  } = _ref2;
  return {
    ...priceTextStyleProps,
    ...getPriceInfo({
      discount,
      price_detail,
    }),
    ...priceTextProps,
  };
};
//# sourceMappingURL=price.js.map
