import classNames from "classnames";
import React from "react";
import { Tracker } from "@udemy/event-tracking";
import { useI18n } from "@udemy/i18n";
import LanguageIcon from "@udemy/icons/dist/language.ud-icon";
import { Button, IconButton } from "@udemy/react-core-components";
import { useUDData } from "@udemy/ud-data";
import { ACTIONS, LanguageSelectorActionEvent } from "../events";
import styles from "./language-selector-button.module.css";
/**
 * Standard language selector button component. Shows a globe icon along with the currently
 * selected language
 */
export const LanguageSelectorButton = /*#__PURE__*/ React.forwardRef(
  (_ref, ref) => {
    let {
      publishEvents,
      withLabel = true,
      className,
      size = "medium",
      onClick,
      ...buttonProps
    } = _ref;
    const { locale: currentLocale } = useI18n();
    const { Config } = useUDData();
    const currentLanguage = Config.supported_languages.find(
      (language) => language.locale === currentLocale
    );
    function handleClick(e) {
      if (publishEvents) {
        Tracker.publishEvent(
          new LanguageSelectorActionEvent({
            action: ACTIONS.openSelector,
            selectorLocation: publishEvents.uiRegion,
            selectedLocale: null,
          })
        );
      }
      onClick === null || onClick === void 0 ? void 0 : onClick(e);
    }
    const ButtonComponent = withLabel ? Button : IconButton;
    return /*#__PURE__*/ React.createElement(
      ButtonComponent,
      Object.assign(
        {
          ref: ref,
          className: classNames(
            {
              [styles["button"]]: withLabel,
            },
            className
          ),
          udStyle: "secondary",
          size: size,
          typography: "ud-text-md",
          onClick: handleClick,
        },
        buttonProps
      ),
      /*#__PURE__*/ React.createElement(
        React.Fragment,
        null,
        /*#__PURE__*/ React.createElement(LanguageIcon, {
          label: false,
          size: "small",
          color: "neutral",
        }),
        withLabel &&
          /*#__PURE__*/ React.createElement(
            "span",
            null,
            currentLanguage === null || currentLanguage === void 0
              ? void 0
              : currentLanguage.name
          )
      )
    );
  }
);
//# sourceMappingURL=language-selector-button.react-component.js.map
