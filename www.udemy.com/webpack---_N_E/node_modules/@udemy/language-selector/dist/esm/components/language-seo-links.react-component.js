import React from "react";
import { useUDData } from "@udemy/ud-data";
import { useGetLocaleUrl } from "../hooks/use-get-locale-url";

// This is a allow list of pages where we'd like to to render locale SEO link piles
// Pages with very similar content should not be included in this list
export const ALLOW_PAGES_LOCALE_SEO_LINKS = [
  "consumer_subscription_landing_page",
  "discovery_category",
  "discovery_logged_out_home",
  "discovery_subcategory",
  "discovery_topic",
  "sitemap",
  "teaching",
];
/**
 * This component renders hidden links for all of our supported languages so that they can
 * be indexed by crawlers. This is should be used when the actual language selector content is
 * rendered in a modal or overlay which does not exist in the DOM until the user clicks on the trigger.
 */
export const LanguageSeoLinks = /*#__PURE__*/ React.forwardRef((_ref, ref) => {
  let { currentUrl } = _ref;
  const { Config, userAgnosticTrackingParams } = useUDData();
  const getLocaleUrl = useGetLocaleUrl(currentUrl);
  if (
    !ALLOW_PAGES_LOCALE_SEO_LINKS.includes(
      userAgnosticTrackingParams === null ||
        userAgnosticTrackingParams === void 0
        ? void 0
        : userAgnosticTrackingParams.page_key
    )
  ) {
    return null;
  }
  return /*#__PURE__*/ React.createElement(
    "div",
    {
      ref: ref,
      className: "ud-sr-only",
      "aria-hidden": true,
      "data-testid": "seo-link-container",
    },
    Config.supported_languages.map((language) =>
      /*#__PURE__*/ React.createElement(
        "a",
        {
          key: language.locale,
          href: getLocaleUrl(language.locale).path,
          tabIndex: -1,
        },
        language.name
      )
    )
  );
});
//# sourceMappingURL=language-seo-links.react-component.js.map
