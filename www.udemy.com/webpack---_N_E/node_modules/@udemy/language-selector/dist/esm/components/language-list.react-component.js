import React from "react";
import { Tracker } from "@udemy/event-tracking";
import { useI18n } from "@udemy/i18n";
import { Button } from "@udemy/react-core-components";
import { useUDData } from "@udemy/ud-data";
import { LanguageSelectorActionEvent, ACTIONS } from "../events";
import { useGetLocaleUrl } from "../hooks/use-get-locale-url";
import { useUpdateUserLocale } from "../hooks/use-update-user-locale";
import styles from "./language-list.module.css";
/**
 * Renders a list of available languages as links. Available languages are pulled from the
 * `supported_languages` field of the UD `Config` object
 */
export const LanguageList = /*#__PURE__*/ React.forwardRef((_ref, ref) => {
  var _activeLanguage$local;
  let { uiRegion, useLangPrefixedUrls = true } = _ref;
  const { locale } = useI18n();
  const { Config } = useUDData();
  const getLocaleUrl = useGetLocaleUrl(undefined, useLangPrefixedUrls);
  const updateUserLocale = useUpdateUserLocale(useLangPrefixedUrls);
  const activeLanguage = Config.supported_languages.find(
    (language) => language.locale === locale
  );
  const activeLocale =
    (_activeLanguage$local =
      activeLanguage === null || activeLanguage === void 0
        ? void 0
        : activeLanguage.locale) !== null && _activeLanguage$local !== void 0
      ? _activeLanguage$local
      : "en_US";
  function handleLanguageClick(e, language) {
    e.preventDefault();
    updateUserLocale(language.locale);
    Tracker.publishEvent(
      new LanguageSelectorActionEvent({
        action: ACTIONS.selectLanguage,
        selectorLocation: uiRegion,
        selectedLocale: language.locale,
      })
    );
  }
  return /*#__PURE__*/ React.createElement(
    "div",
    {
      ref: ref,
      className: styles["root"],
    },
    Config.supported_languages.map((language) =>
      /*#__PURE__*/ React.createElement(
        Button,
        {
          key: language.locale,
          className: styles["button"],
          "data-active": language.locale === activeLocale ? true : undefined,
          componentClass: "a",
          href: getLocaleUrl(language.locale).path,
          udStyle: "ghost",
          size: "medium",
          typography: "ud-text-md",
          onClick: (e) => handleLanguageClick(e, language),
        },
        /*#__PURE__*/ React.createElement(
          "span",
          {
            lang: language.lang,
          },
          language.name
        )
      )
    )
  );
});
//# sourceMappingURL=language-list.react-component.js.map
