import React from "react";
import { Tracker } from "@udemy/event-tracking";
import { useMatchMedia } from "@udemy/hooks";
import { useI18n } from "@udemy/i18n";
import { Modal, ModalTrigger } from "@udemy/react-dialog-components";
import { LanguageSelectorActionEvent, ACTIONS } from "../events";
import { LanguageList } from "./language-list.react-component";
import styles from "./modal-language-selector.module.css";
function trackOpenEvent(uiRegion) {
  Tracker.publishEvent(
    new LanguageSelectorActionEvent({
      action: ACTIONS.openSelector,
      selectorLocation: uiRegion,
      selectedLocale: null,
    })
  );
}
/**
 * Component that renders a `LanguageList` inside of a `Modal` and publishes a
 * `LanguageSelectorActionEvent` when the modal is opened
 */
export const ModalLanguageSelector = (_ref) => {
  let { uiRegion, trigger, useLangPrefixedUrls = true } = _ref;
  const { gettext } = useI18n();
  const isMobile = useMatchMedia("sm-max");
  return /*#__PURE__*/ React.createElement(ModalTrigger, {
    trigger: trigger,
    // eslint-disable-next-line react/jsx-no-bind
    renderModal: (props) =>
      /*#__PURE__*/ React.createElement(
        Modal,
        Object.assign({}, props, {
          fullPage: Boolean(isMobile),
          className: styles["modal"],
          title: gettext("Choose a language"),
          onOpen: () => trackOpenEvent(uiRegion),
        }),
        /*#__PURE__*/ React.createElement(LanguageList, {
          uiRegion: uiRegion,
          useLangPrefixedUrls: useLangPrefixedUrls,
        })
      ),
  });
};
//# sourceMappingURL=modal-language-selector.react-component.js.map
