import { useI18n } from "@udemy/i18n";
import { Button } from "@udemy/react-core-components";
import classNames from "classnames";
import { observer } from "mobx-react";
import React, { useEffect } from "react";
import styles from "./advertising-banner.module.css";
/** The interface that any dismissible banner MobX store must implement */

/**
 * The AdvertisingBanner component.
 */
export const AdvertisingBanner = observer(
  Object.assign(
    (_ref) => {
      let {
        background = "dark",
        title,
        subtitle,
        titleClassName,
        subtitleClassName,
        submitButtonProps = {},
        dismissButtonProps = {},
        children,
        dismissibleBannerStore,
        className,
        ...props
      } = _ref;
      const { gettext } = useI18n();
      const {
        submitButtonText = gettext("Submit"),
        dismissButtonText = gettext("Dismiss"),
      } = props;
      const { onClick, ...dismissButtonRestProps } = dismissButtonProps;
      const isDismissible = !!dismissibleBannerStore;

      const onDismissClick = (event) => {
        dismissibleBannerStore === null || dismissibleBannerStore === void 0
          ? void 0
          : dismissibleBannerStore.close();

        if (
          dismissButtonProps &&
          typeof dismissButtonProps.onClick === "function"
        ) {
          dismissButtonProps.onClick(event);
        }
      };

      useEffect(() => {
        dismissibleBannerStore === null || dismissibleBannerStore === void 0
          ? void 0
          : dismissibleBannerStore.setUpStorage();
      });

      if (
        dismissibleBannerStore !== null &&
        dismissibleBannerStore !== void 0 &&
        dismissibleBannerStore.shouldHide
      ) {
        return null;
      }

      return /*#__PURE__*/ React.createElement(
        "div",
        {
          className: classNames(className, styles.container, {
            [styles.dark]: background === "dark",
          }),
        },
        /*#__PURE__*/ React.createElement(
          "div",
          {
            className: styles["text-container"],
          },
          /*#__PURE__*/ React.createElement(
            "h3",
            {
              className: classNames(
                titleClassName !== null && titleClassName !== void 0
                  ? titleClassName
                  : "ud-heading-serif-xl",
                styles.title
              ),
              "data-purpose": "title",
            },
            title
          ),
          subtitle &&
            /*#__PURE__*/ React.createElement(
              "div",
              {
                className:
                  subtitleClassName !== null && subtitleClassName !== void 0
                    ? subtitleClassName
                    : "ud-text-md",
                "data-purpose": "subtitle",
              },
              subtitle
            )
        ),
        children,
        /*#__PURE__*/ React.createElement(
          "div",
          {
            className: styles["action-buttons"],
          },
          submitButtonProps &&
            /*#__PURE__*/ React.createElement(
              Button,
              Object.assign(
                {
                  "data-purpose": "submit-button",
                  className: styles["submit-button"],
                  udStyle: "primary",
                },
                submitButtonProps
              ),
              submitButtonText
            ),
          isDismissible &&
            /*#__PURE__*/ React.createElement(
              Button,
              Object.assign(
                {
                  "data-purpose": "dismiss-button",
                  className: styles["dismiss-button"],
                  udStyle: "white-outline",
                },
                dismissButtonRestProps,
                {
                  onClick: onDismissClick,
                }
              ),
              dismissButtonText
            )
        )
      );
    },
    {
      displayName: "AdvertisingBanner",
    }
  )
);
//# sourceMappingURL=advertising-banner.react-component.js.map
