var _class, _class2;

import { noop } from "@udemy/shared-utils";
import classNames from "classnames";
import { observer } from "mobx-react";
import React, { Component } from "react";
import styles from "./toast.module.css";

/** Default auto dismiss timeout interval for a Toast, 6s (6000ms). */
const DEFAULT_AUTODISMISS_TIMEOUT = 6000;
/** React props interface for the Toast component. */

export /**
 * ### The Toast component.
 */
let Toast =
  observer(
    (_class =
      ((_class2 = class Toast extends Component {
        constructor() {
          super(...arguments);

          this.handleTransitionEnd = () => {
            // wait until the animation is over before removing from the DOM
            if (!this.props.toastStore.isVisible) {
              this.props.toasterStore.removeToast(this.props.toastStore.id);
            }
          };
        }

        componentDidMount() {
          // setTimeout here allows the component to render once pre-animation,
          // i.e. gives the animation a place to start
          setTimeout(() => {
            var _this$props$onFirstVi, _this$props;

            this.props.toastStore.showToast();
            (_this$props$onFirstVi = (_this$props = this.props)
              .onFirstVisible) === null || _this$props$onFirstVi === void 0
              ? void 0
              : _this$props$onFirstVi.call(_this$props);
          }, 100);

          if (this.props.autoDismiss) {
            setTimeout(
              this.props.toastStore.dismissToast,
              this.props.autoDismissTimeout
            );
          }

          if (this.props.impressionUseCase) {
            var _this$props$onToastIm, _this$props2;

            (_this$props$onToastIm = (_this$props2 = this.props)
              .onToastImpression) === null || _this$props$onToastIm === void 0
              ? void 0
              : _this$props$onToastIm.call(
                  _this$props2,
                  this.props.impressionUseCase
                );
          }
        }

        render() {
          return /*#__PURE__*/ React.createElement(
            "div",
            {
              className: classNames(styles.container, {
                [styles.visible]: this.props.toastStore.isVisible,
              }),
              onTransitionEnd: this.handleTransitionEnd,
              role: "status",
            },
            this.props.children
          );
        }
      }),
      (_class2.defaultProps = {
        autoDismiss: false,
        autoDismissTimeout: DEFAULT_AUTODISMISS_TIMEOUT,
        impressionUseCase: undefined,
        onFirstVisible: noop,
        onToastImpression: undefined,
      }),
      _class2))
  ) || _class;
//# sourceMappingURL=toast.react-component.js.map
