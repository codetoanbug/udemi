import _initializerDefineProperty from "@babel/runtime/helpers/initializerDefineProperty";
import _applyDecoratedDescriptor from "@babel/runtime/helpers/applyDecoratedDescriptor";
import _initializerWarningHelper from "@babel/runtime/helpers/initializerWarningHelper";

var _class, _descriptor, _descriptor2, _descriptor3;

import { getUniqueId } from "@udemy/design-system-utils";
import { observable, action } from "mobx";
/**
 * This MobX store manages the toast visibility (for the sake of animation).
 *
 * @remarks
 * The only reason it exists rather than storing this state on the component directly is so that
 * {@link ToasterStore} can access it from outside the component to trigger the exit animation.
 */

export let ToastStore =
  ((_class = class ToastStore {
    constructor() {
      _initializerDefineProperty(this, "isVisible", _descriptor, this);

      this.id = void 0;

      _initializerDefineProperty(this, "showToast", _descriptor2, this);

      _initializerDefineProperty(this, "dismissToast", _descriptor3, this);

      this.id = getUniqueId("toast");
    }
  }),
  ((_descriptor = _applyDecoratedDescriptor(
    _class.prototype,
    "isVisible",
    [observable],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function () {
        return false;
      },
    }
  )),
  (_descriptor2 = _applyDecoratedDescriptor(
    _class.prototype,
    "showToast",
    [action],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function () {
        return () => {
          this.isVisible = true;
        };
      },
    }
  )),
  (_descriptor3 = _applyDecoratedDescriptor(
    _class.prototype,
    "dismissToast",
    [action],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function () {
        return () => {
          // Triggers exit animation'
          this.isVisible = false;
        };
      },
    }
  ))),
  _class);
//# sourceMappingURL=toast.mobx-store.js.map
