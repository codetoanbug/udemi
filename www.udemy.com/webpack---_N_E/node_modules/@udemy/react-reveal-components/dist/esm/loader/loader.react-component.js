import { useI18n } from "@udemy/i18n";
import LoadingSpinnerIcon from "@udemy/icons/dist/loading-spinner.ud-icon";
import classNames from "classnames";
import React from "react"; // Note: Loader CSS is served up via the react-reveal-components.global.css file;

/** React component props for the Loader component */

/**
 * ### Loader
 *
 * @remarks
 * This component requires global CSS.
 * You must add this import to your application's `_app.tsx` global CSS import manifest:
 *
 * @example
 * `@import '~@udemy/react-reveal-components/dist/react-reveal-components.global.css';`
 */
export const Loader = /*#__PURE__*/ React.forwardRef((_ref, ref) => {
  let {
    block = false,
    overlay = false,
    className,
    withLCPCandidate = false,
    ...props
  } = _ref;
  const { gettext } = useI18n();
  const { label = gettext("Loading") } = props;
  const iconProps = props;

  if (block || overlay || withLCPCandidate) {
    if (withLCPCandidate) {
      iconProps.size = "xxxlarge";
    }

    return /*#__PURE__*/ React.createElement(
      "div",
      {
        className: classNames(
          className,
          "ud-loader-block",
          overlay ? "ud-loader-overlay" : "",
          withLCPCandidate ? "ud-lcp-candidate-white" : ""
        ),
        "data-purpose": "load-spinner-wrapper",
        ref: ref,
      },
      /*#__PURE__*/ React.createElement(
        LoadingSpinnerIcon,
        Object.assign({}, iconProps, {
          label: label,
          className: "ud-loader",
        })
      )
    );
  }

  return /*#__PURE__*/ React.createElement(
    LoadingSpinnerIcon,
    Object.assign({}, iconProps, {
      label: label,
      className: classNames(className, "ud-loader"),
      ref: ref,
    })
  );
});
Loader.displayName = "Loader";
/** Intended to show while the main content of a page or dialog is loading. */

export const MainContentLoader = (props) =>
  /*#__PURE__*/ React.createElement(
    Loader,
    Object.assign(
      {
        block: true,
        size: "xxlarge",
      },
      props
    )
  );
//# sourceMappingURL=loader.react-component.js.map
