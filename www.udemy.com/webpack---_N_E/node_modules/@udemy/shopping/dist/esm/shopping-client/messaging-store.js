import _applyDecoratedDescriptor from "@babel/runtime/helpers/applyDecoratedDescriptor";
var _class;
import {
  action,
  computed,
  observe,
  observable,
  ObservableMap,
  runInAction,
} from "mobx";
const unseenMessages = new ObservableMap();
export let MessagingStore =
  ((_class = class MessagingStore {
    constructor(type) {
      this.type = type;
      this.pop = false;
      this.lastMessage = observable.box(null);
      observe(this, "onMessageInternal", (change) => {
        if (this.pop && change.newValue) {
          runInAction(() => {
            this.lastMessage.set(change.newValue);
          });
          return;
        }
        this.popLastMessage();
      });
    }
    get messages() {
      var _unseenMessages$get;
      if (!unseenMessages.get(this.type)) {
        return [];
      }
      return (_unseenMessages$get = unseenMessages.get(this.type)) !== null &&
        _unseenMessages$get !== void 0
        ? _unseenMessages$get
        : [];
    }
    get onMessageInternal() {
      const messages = unseenMessages.get(this.type);
      if (!messages) {
        return null;
      }
      this.pop = true;
      return messages[messages.length - 1];
    }
    get onMessage() {
      return this.lastMessage.get();
    }
    sendMessage(body) {
      let keyMessages = [];
      if (unseenMessages.has(this.type)) {
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        keyMessages = unseenMessages.get(this.type);
      }
      keyMessages.push(body);
      unseenMessages.set(this.type, keyMessages);
    }
    clear() {
      this.lastMessage.set(null);
      unseenMessages.delete(this.type);
    }
    popLastMessage() {
      let keyMessages = [];
      if (unseenMessages.has(this.type)) {
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        keyMessages = unseenMessages.get(this.type);
      }
      keyMessages.pop();
      unseenMessages.set(this.type, keyMessages);
      this.pop = false;
    }
  }),
  (_applyDecoratedDescriptor(
    _class.prototype,
    "messages",
    [computed],
    Object.getOwnPropertyDescriptor(_class.prototype, "messages"),
    _class.prototype
  ),
  _applyDecoratedDescriptor(
    _class.prototype,
    "onMessageInternal",
    [computed],
    Object.getOwnPropertyDescriptor(_class.prototype, "onMessageInternal"),
    _class.prototype
  ),
  _applyDecoratedDescriptor(
    _class.prototype,
    "onMessage",
    [computed],
    Object.getOwnPropertyDescriptor(_class.prototype, "onMessage"),
    _class.prototype
  ),
  _applyDecoratedDescriptor(
    _class.prototype,
    "sendMessage",
    [action],
    Object.getOwnPropertyDescriptor(_class.prototype, "sendMessage"),
    _class.prototype
  ),
  _applyDecoratedDescriptor(
    _class.prototype,
    "clear",
    [action],
    Object.getOwnPropertyDescriptor(_class.prototype, "clear"),
    _class.prototype
  ),
  _applyDecoratedDescriptor(
    _class.prototype,
    "popLastMessage",
    [action],
    Object.getOwnPropertyDescriptor(_class.prototype, "popLastMessage"),
    _class.prototype
  )),
  _class);
export function getMessagingStore(type) {
  return new MessagingStore(type);
}
//# sourceMappingURL=messaging-store.js.map
