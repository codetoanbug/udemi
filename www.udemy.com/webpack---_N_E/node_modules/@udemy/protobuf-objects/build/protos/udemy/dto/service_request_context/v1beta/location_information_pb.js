// source: udemy/dto/service_request_context/v1beta/location_information.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require("google-protobuf");
var goog = jspb;
var global = Function("return this")();

goog.exportSymbol(
  "proto.udemy.dto.service_request_context.v1.LocationInformation",
  null,
  global
);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.udemy.dto.service_request_context.v1.LocationInformation = function (
  opt_data
) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(
  proto.udemy.dto.service_request_context.v1.LocationInformation,
  jspb.Message
);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.udemy.dto.service_request_context.v1.LocationInformation.displayName =
    "proto.udemy.dto.service_request_context.v1.LocationInformation";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.toObject =
    function (opt_includeInstance) {
      return proto.udemy.dto.service_request_context.v1.LocationInformation.toObject(
        opt_includeInstance,
        this
      );
    };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.udemy.dto.service_request_context.v1.LocationInformation} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.udemy.dto.service_request_context.v1.LocationInformation.toObject =
    function (includeInstance, msg) {
      var f,
        obj = {
          asn: jspb.Message.getFieldWithDefault(msg, 1, ""),
          city: jspb.Message.getFieldWithDefault(msg, 2, ""),
          colo: jspb.Message.getFieldWithDefault(msg, 3, ""),
          continent: jspb.Message.getFieldWithDefault(msg, 4, ""),
          countryCode: jspb.Message.getFieldWithDefault(msg, 5, ""),
          latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
          longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
          postalCode: jspb.Message.getFieldWithDefault(msg, 8, ""),
          region: jspb.Message.getFieldWithDefault(msg, 9, ""),
          regionCode: jspb.Message.getFieldWithDefault(msg, 10, ""),
          timeZone: jspb.Message.getFieldWithDefault(msg, 11, ""),
          metroCode: jspb.Message.getFieldWithDefault(msg, 12, ""),
        };

      if (includeInstance) {
        obj.$jspbMessageInstance = msg;
      }
      return obj;
    };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.udemy.dto.service_request_context.v1.LocationInformation}
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.deserializeBinary =
  function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg =
      new proto.udemy.dto.service_request_context.v1.LocationInformation();
    return proto.udemy.dto.service_request_context.v1.LocationInformation.deserializeBinaryFromReader(
      msg,
      reader
    );
  };

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.udemy.dto.service_request_context.v1.LocationInformation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.udemy.dto.service_request_context.v1.LocationInformation}
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setAsn(value);
          break;
        case 2:
          var value = /** @type {string} */ (reader.readString());
          msg.setCity(value);
          break;
        case 3:
          var value = /** @type {string} */ (reader.readString());
          msg.setColo(value);
          break;
        case 4:
          var value = /** @type {string} */ (reader.readString());
          msg.setContinent(value);
          break;
        case 5:
          var value = /** @type {string} */ (reader.readString());
          msg.setCountryCode(value);
          break;
        case 6:
          var value = /** @type {number} */ (reader.readFloat());
          msg.setLatitude(value);
          break;
        case 7:
          var value = /** @type {number} */ (reader.readFloat());
          msg.setLongitude(value);
          break;
        case 8:
          var value = /** @type {string} */ (reader.readString());
          msg.setPostalCode(value);
          break;
        case 9:
          var value = /** @type {string} */ (reader.readString());
          msg.setRegion(value);
          break;
        case 10:
          var value = /** @type {string} */ (reader.readString());
          msg.setRegionCode(value);
          break;
        case 11:
          var value = /** @type {string} */ (reader.readString());
          msg.setTimeZone(value);
          break;
        case 12:
          var value = /** @type {string} */ (reader.readString());
          msg.setMetroCode(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.udemy.dto.service_request_context.v1.LocationInformation.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.udemy.dto.service_request_context.v1.LocationInformation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.serializeBinaryToWriter =
  function (message, writer) {
    var f = undefined;
    f = message.getAsn();
    if (f.length > 0) {
      writer.writeString(1, f);
    }
    f = message.getCity();
    if (f.length > 0) {
      writer.writeString(2, f);
    }
    f = message.getColo();
    if (f.length > 0) {
      writer.writeString(3, f);
    }
    f = message.getContinent();
    if (f.length > 0) {
      writer.writeString(4, f);
    }
    f = message.getCountryCode();
    if (f.length > 0) {
      writer.writeString(5, f);
    }
    f = message.getLatitude();
    if (f !== 0.0) {
      writer.writeFloat(6, f);
    }
    f = message.getLongitude();
    if (f !== 0.0) {
      writer.writeFloat(7, f);
    }
    f = message.getPostalCode();
    if (f.length > 0) {
      writer.writeString(8, f);
    }
    f = message.getRegion();
    if (f.length > 0) {
      writer.writeString(9, f);
    }
    f = message.getRegionCode();
    if (f.length > 0) {
      writer.writeString(10, f);
    }
    f = message.getTimeZone();
    if (f.length > 0) {
      writer.writeString(11, f);
    }
    f = message.getMetroCode();
    if (f.length > 0) {
      writer.writeString(12, f);
    }
  };

/**
 * optional string asn = 1;
 * @return {string}
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.getAsn =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 1, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.udemy.dto.service_request_context.v1.LocationInformation} returns this
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.setAsn =
  function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
  };

/**
 * optional string city = 2;
 * @return {string}
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.getCity =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 2, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.udemy.dto.service_request_context.v1.LocationInformation} returns this
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.setCity =
  function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
  };

/**
 * optional string colo = 3;
 * @return {string}
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.getColo =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 3, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.udemy.dto.service_request_context.v1.LocationInformation} returns this
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.setColo =
  function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
  };

/**
 * optional string continent = 4;
 * @return {string}
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.getContinent =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 4, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.udemy.dto.service_request_context.v1.LocationInformation} returns this
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.setContinent =
  function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
  };

/**
 * optional string country_code = 5;
 * @return {string}
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.getCountryCode =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 5, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.udemy.dto.service_request_context.v1.LocationInformation} returns this
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.setCountryCode =
  function (value) {
    return jspb.Message.setProto3StringField(this, 5, value);
  };

/**
 * optional float latitude = 6;
 * @return {number}
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.getLatitude =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0)
    );
  };

/**
 * @param {number} value
 * @return {!proto.udemy.dto.service_request_context.v1.LocationInformation} returns this
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.setLatitude =
  function (value) {
    return jspb.Message.setProto3FloatField(this, 6, value);
  };

/**
 * optional float longitude = 7;
 * @return {number}
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.getLongitude =
  function () {
    return /** @type {number} */ (
      jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0)
    );
  };

/**
 * @param {number} value
 * @return {!proto.udemy.dto.service_request_context.v1.LocationInformation} returns this
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.setLongitude =
  function (value) {
    return jspb.Message.setProto3FloatField(this, 7, value);
  };

/**
 * optional string postal_code = 8;
 * @return {string}
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.getPostalCode =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 8, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.udemy.dto.service_request_context.v1.LocationInformation} returns this
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.setPostalCode =
  function (value) {
    return jspb.Message.setProto3StringField(this, 8, value);
  };

/**
 * optional string region = 9;
 * @return {string}
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.getRegion =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 9, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.udemy.dto.service_request_context.v1.LocationInformation} returns this
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.setRegion =
  function (value) {
    return jspb.Message.setProto3StringField(this, 9, value);
  };

/**
 * optional string region_code = 10;
 * @return {string}
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.getRegionCode =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 10, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.udemy.dto.service_request_context.v1.LocationInformation} returns this
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.setRegionCode =
  function (value) {
    return jspb.Message.setProto3StringField(this, 10, value);
  };

/**
 * optional string time_zone = 11;
 * @return {string}
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.getTimeZone =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 11, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.udemy.dto.service_request_context.v1.LocationInformation} returns this
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.setTimeZone =
  function (value) {
    return jspb.Message.setProto3StringField(this, 11, value);
  };

/**
 * optional string metro_code = 12;
 * @return {string}
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.getMetroCode =
  function () {
    return /** @type {string} */ (
      jspb.Message.getFieldWithDefault(this, 12, "")
    );
  };

/**
 * @param {string} value
 * @return {!proto.udemy.dto.service_request_context.v1.LocationInformation} returns this
 */
proto.udemy.dto.service_request_context.v1.LocationInformation.prototype.setMetroCode =
  function (value) {
    return jspb.Message.setProto3StringField(this, 12, value);
  };

goog.object.extend(exports, proto.udemy.dto.service_request_context.v1);
