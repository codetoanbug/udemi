import classNames from "classnames";
import React from "react";
import {
  CourseCardBadges,
  CourseCardImage,
  CourseCardInstructors,
  CourseCardInstructorsContext,
  CourseCardPrice,
  CourseCardRatings,
  CourseCardTitle,
} from "@udemy/react-card-components";
import styles from "./bordered-course-card.module.css";

/**
 * ### BorderedCourseCard
 *
 * Experimental course card with a border, rounded corners, and additional padding.
 *
 * @remarks
 *
 * This card implements a subset of the behaviors of
 * {@link @udemy/react-card-components#CourseCard}.
 *
 * Contrary to that card, this card renders only one kind of layout and lacks
 * an optional heading and details slot.
 *
 * The following props from `CourseCardProps` are ignored:
 * - `details`
 * - `detailsProps`
 * - `showDetails`
 * - `headline`
 * - `size`
 * - `width`
 *
 * @privateRemarks
 *
 * We accept the full `CourseCardProps` so that `BorderedCourseCard` and `CourseCard` can
 * be rendered interchangeably while we experiment with it.
 */
export const BorderedCourseCard = /*#__PURE__*/ React.forwardRef(
  (_ref, ref) => {
    let {
      badges,
      badgesProps,
      children,
      image,
      imageProps,
      instructors,
      instructorsProps,
      price,
      priceProps,
      ratings,
      ratingsProps,
      title,
      titleProps,
      ...props
    } = _ref;
    // Remove props that should be ignored, but also not passed through to the `<div>`
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    const {
      details,
      detailsProps,
      headline,
      showDetails,
      size,
      width,
      ...divProps
    } = props;
    return /*#__PURE__*/ React.createElement(
      "div",
      Object.assign({}, divProps, {
        className: classNames(divProps.className, styles.container),
        ref: ref,
      }),
      /*#__PURE__*/ React.createElement(
        "div",
        {
          className: styles["image-container"],
        },
        image ||
          (imageProps &&
            /*#__PURE__*/ React.createElement(CourseCardImage, imageProps))
      ),
      /*#__PURE__*/ React.createElement(
        "div",
        {
          className: styles["main-content"],
        },
        title ||
          (titleProps &&
            /*#__PURE__*/ React.createElement(CourseCardTitle, titleProps)),
        /*#__PURE__*/ React.createElement(
          CourseCardInstructorsContext.Provider,
          {
            value: {
              size: "small",
            },
          },
          instructors ||
            (instructorsProps &&
              /*#__PURE__*/ React.createElement(
                CourseCardInstructors,
                instructorsProps
              ))
        ),
        ratings ||
          (ratingsProps &&
            /*#__PURE__*/ React.createElement(CourseCardRatings, ratingsProps)),
        /*#__PURE__*/ React.createElement(
          "div",
          {
            className: styles["price-text-container"],
          },
          price ||
            (priceProps &&
              /*#__PURE__*/ React.createElement(CourseCardPrice, priceProps))
        ),
        /*#__PURE__*/ React.createElement(
          "div",
          null,
          badges ||
            (badgesProps &&
              /*#__PURE__*/ React.createElement(CourseCardBadges, badgesProps))
        ),
        children
      )
    );
  }
);
//# sourceMappingURL=bordered-course-card.react-component.js.map
