import currencyFormatter from "currencyformatter.js";
import React from "react";
import { useUDData } from "../use-ud-data";
const DEFAULT_CURRENCY = "usd";
const DEFAULT_LOCALE = "en_US";
const DEFAULT_SCALE = 2;
export function formatCurrency(value) {
  let options =
    arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  const mergedOptions = Object.assign(
    {
      currency: DEFAULT_CURRENCY,
      symbol: "$",
      locale: DEFAULT_LOCALE,
      decimal: ".",
      group: ",",
      pattern: "!#,##0.00",
      scale: DEFAULT_SCALE,
    },
    options
  );
  if (!(mergedOptions.locale in currencyFormatter.locales)) {
    mergedOptions.locale = mergedOptions.locale.substring(0, 2);
  }
  if (!(mergedOptions.locale in currencyFormatter.locales)) {
    mergedOptions.locale = "en_US";
  }
  // Adjust the pattern's scale according to `opts.scale`.
  mergedOptions.pattern = mergedOptions.pattern.replace(
    ".00",
    `.${new Array(mergedOptions.scale + 1).join("0")}`
  );

  // Truncate extra decimal places and round the number (Can prevent scientific notation)
  value = +(+value).toFixed(mergedOptions.scale);
  return currencyFormatter.format(value, mergedOptions);
}
export function useFormatCurrency() {
  const { Config } = useUDData();
  const _formatCurrency = React.useCallback(
    function (value) {
      var _Config$price_country, _Config$price_country2;
      let options =
        arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      const formatter =
        (_Config$price_country =
          (_Config$price_country2 = Config.price_country) === null ||
          _Config$price_country2 === void 0
            ? void 0
            : _Config$price_country2.currency_formatter) !== null &&
        _Config$price_country !== void 0
          ? _Config$price_country
          : {};
      return formatCurrency(value, {
        ...formatter,
        ...options,
      });
    },
    [Config.price_country.currency_formatter]
  );
  return {
    formatCurrency: _formatCurrency,
  };
}
//# sourceMappingURL=currency.js.map
