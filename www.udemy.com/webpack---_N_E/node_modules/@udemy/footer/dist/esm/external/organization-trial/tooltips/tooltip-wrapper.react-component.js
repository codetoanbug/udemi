import { observer } from "mobx-react";
import React from "react";
import { useI18n } from "@udemy/i18n";
import { Button } from "@udemy/react-core-components";
import { BasicPopover } from "@udemy/react-popup-components";
import { setupTooltipLocalStorage } from "./setup-tooltip-local-storage";
import styles from "./tooltip-wrapper.module.css";
export const TooltipWrapper = observer((_ref) => {
  let { content, componentClass = BasicPopover, isOpen, ...rest } = _ref;
  const [storage] = React.useState(setupTooltipLocalStorage(content.type));
  const [tooltipVisible, setTooltipVisible] = React.useState(false);
  const { gettext } = useI18n();
  React.useEffect(() => {
    if (isOpen && storage.get("tooltip_type") !== content.type) {
      setTooltipVisible(true);
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [content.type, isOpen]);
  const onClose = () => {
    setTooltipVisible(false);
    storage.set("tooltip_type", content.type);
  };
  const PopoverComponent = componentClass;
  return /*#__PURE__*/ React.createElement(
    PopoverComponent,
    Object.assign({}, rest, {
      isOpen: tooltipVisible,
    }),
    /*#__PURE__*/ React.createElement(
      "div",
      {
        "data-testid": "tooltip-title",
        className: styles["tooltip-title"],
      },
      content.title
    ),
    /*#__PURE__*/ React.createElement(
      "div",
      {
        "data-testid": "tooltip-text",
        className: styles["tooltip-text"],
      },
      content.text
    ),
    /*#__PURE__*/ React.createElement(
      Button,
      {
        udStyle: "secondary",
        onClick: onClose,
        size: "medium",
        "data-testid": "tooltip-cta",
        className: styles["tooltip-cta"],
      },
      gettext("Dismiss")
    )
  );
});
//# sourceMappingURL=tooltip-wrapper.react-component.js.map
