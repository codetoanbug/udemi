import _initializerDefineProperty from "@babel/runtime/helpers/initializerDefineProperty";
import _applyDecoratedDescriptor from "@babel/runtime/helpers/applyDecoratedDescriptor";
import _initializerWarningHelper from "@babel/runtime/helpers/initializerWarningHelper";
var _class,
  _descriptor,
  _descriptor2,
  _descriptor3,
  _descriptor4,
  _descriptor5,
  _descriptor6,
  _descriptor7,
  _descriptor8,
  _descriptor9,
  _descriptor10,
  _descriptor11;
import { observable, action } from "mobx";
import { udApi } from "@udemy/ud-api";
import { API_ROUTES } from "../constants";

/**
 * Store to handle sending `Nudge Organization owner` and showing relevant notifications
 */
export let NudgeOwnerModalStore =
  ((_class = class NudgeOwnerModalStore {
    constructor(ownerName, gettext) {
      this.ownerName = ownerName;
      this.gettext = gettext;
      this.udApi = udApi;
      _initializerDefineProperty(this, "message", _descriptor, this);
      _initializerDefineProperty(
        this,
        "isNotificationVisible",
        _descriptor2,
        this
      );
      _initializerDefineProperty(this, "notificationText", _descriptor3, this);
      _initializerDefineProperty(this, "notificationType", _descriptor4, this);
      _initializerDefineProperty(this, "userRating", _descriptor5, this);
      _initializerDefineProperty(this, "setDefaultMessage", _descriptor6, this);
      _initializerDefineProperty(this, "onMessageChanged", _descriptor7, this);
      _initializerDefineProperty(this, "setUserRating", _descriptor8, this);
      _initializerDefineProperty(
        this,
        "sendNudgeOwnerMessage",
        _descriptor9,
        this
      );
      _initializerDefineProperty(this, "showNotification", _descriptor10, this);
      _initializerDefineProperty(this, "hideNotification", _descriptor11, this);
      this.setDefaultMessage();
    }
  }),
  ((_descriptor = _applyDecoratedDescriptor(
    _class.prototype,
    "message",
    [observable],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function () {
        return "";
      },
    }
  )),
  (_descriptor2 = _applyDecoratedDescriptor(
    _class.prototype,
    "isNotificationVisible",
    [observable],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function () {
        return false;
      },
    }
  )),
  (_descriptor3 = _applyDecoratedDescriptor(
    _class.prototype,
    "notificationText",
    [observable],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function () {
        return "";
      },
    }
  )),
  (_descriptor4 = _applyDecoratedDescriptor(
    _class.prototype,
    "notificationType",
    [observable],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: null,
    }
  )),
  (_descriptor5 = _applyDecoratedDescriptor(
    _class.prototype,
    "userRating",
    [observable],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function () {
        return 2;
      },
    }
  )),
  (_descriptor6 = _applyDecoratedDescriptor(
    _class.prototype,
    "setDefaultMessage",
    [action],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function () {
        return () => {
          this.message = "";
        };
      },
    }
  )),
  (_descriptor7 = _applyDecoratedDescriptor(
    _class.prototype,
    "onMessageChanged",
    [action],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function () {
        return (event) => {
          this.message = event.target.value;
        };
      },
    }
  )),
  (_descriptor8 = _applyDecoratedDescriptor(
    _class.prototype,
    "setUserRating",
    [action],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function () {
        return (rating) => {
          this.userRating = rating;
        };
      },
    }
  )),
  (_descriptor9 = _applyDecoratedDescriptor(
    _class.prototype,
    "sendNudgeOwnerMessage",
    [action],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function () {
        return (onSuccess) => {
          const payload = {
            message_body: this.message,
            user_rating: this.userRating,
          };
          return this.udApi
            .post(API_ROUTES.nudgeOwner, payload)
            .then(
              action(() => {
                onSuccess();
                this.showNotification(this.gettext("Message sent"), "success");
                return "success";
              })
            )
            .catch(() => {
              this.showNotification(
                this.gettext("Something went wrong! Please try again later."),
                "error"
              );
              return "error";
            });
        };
      },
    }
  )),
  (_descriptor10 = _applyDecoratedDescriptor(
    _class.prototype,
    "showNotification",
    [action],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function () {
        return (text, type) => {
          this.isNotificationVisible = true;
          this.notificationText = text;
          this.notificationType = type;
        };
      },
    }
  )),
  (_descriptor11 = _applyDecoratedDescriptor(
    _class.prototype,
    "hideNotification",
    [action],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function () {
        return () => {
          this.isNotificationVisible = false;
          this.notificationType = undefined;
          this.notificationText = "";
        };
      },
    }
  ))),
  _class);
//# sourceMappingURL=nudge-owner-modal.mobx-store.js.map
