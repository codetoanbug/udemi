import classNames from "classnames";
import { observer } from "mobx-react";
import React from "react";
import {
  ModalLanguageSelector,
  LanguageSelectorButton,
} from "@udemy/language-selector";
import { Button } from "@udemy/react-core-components";
import { serverOrClient } from "@udemy/shared-utils";
import { useUDData } from "@udemy/ud-data";
import { LimitedConsumptionTrial } from "../../external/organization-trial/limited-consumption-trial/limited-consumption-trial.react-component";
import { useIsFeatureEnabled } from "../../external/utils/use-is-feature-enabled";
import { Links } from "../links/links.react-component";
import { Logos } from "../logos/logos.react-component";
import { TeachOnUdemyBanner } from "../teach-on-udemy-banner/teach-on-udemy-banner.react-component";
import { UFBNotice } from "../ufb-notice/ufb-notice.react-component";
import { FooterContextProvider, useFooterContext } from "./footer-context";
const FooterImplementation = observer((_ref) => {
  var _footerStore$ufbNotic;
  let { useLangPrefixedUrls = true } = _ref;
  const { footerStore, limitedConsumptionTrial } = useFooterContext();
  const { Config } = useUDData();
  const isFeatureEnabled = useIsFeatureEnabled();
  const [isMounted, setIsMounted] = React.useState(false);
  React.useEffect(() => {
    setIsMounted(true);
    return () => {
      setIsMounted(false);
    };
  }, []);
  const shouldShowTeachBanner =
    isMounted &&
    !Config.brand.has_organization &&
    !footerStore.isJpFooter &&
    !serverOrClient.global.location.pathname.startsWith("/teaching/") &&
    !!footerStore.user &&
    !footerStore.user.has_instructor_intent;
  const shouldShowUfbNotice =
    !Config.brand.has_organization &&
    !footerStore.isJpFooter &&
    isFeatureEnabled("ufb_notices_footer.top_com") &&
    footerStore.ufbNotice.link &&
    footerStore.ufbNotice.placement;
  const ubIsLimitedConsumptionTrial =
    Config.brand.has_organization &&
    Config.brand.organization.is_limited_consumption_trial;
  return /*#__PURE__*/ React.createElement(
    "footer",
    {
      className: classNames("ud-footer", {
        "ud-footer-initially-hidden": !!footerStore.hideFooterUntilContentReady,
        "ud-ufb-trial-footer": ubIsLimitedConsumptionTrial,
      }),
      "data-purpose": "footer",
    },
    shouldShowTeachBanner &&
      /*#__PURE__*/ React.createElement(TeachOnUdemyBanner, null),
    shouldShowUfbNotice &&
      /*#__PURE__*/ React.createElement(UFBNotice, {
        link: footerStore.ufbNotice.link,
        placement:
          (_footerStore$ufbNotic = footerStore.ufbNotice.placement) !== null &&
          _footerStore$ufbNotic !== void 0
            ? _footerStore$ufbNotic
            : "footer",
        isOnsiteRequestDemo: footerStore.ufbNotice.isOnsiteRequestDemo,
      }),
    /*#__PURE__*/ React.createElement(
      "div",
      {
        className: "footer-section footer-section-main",
      },
      /*#__PURE__*/ React.createElement(
        "div",
        {
          className: "links-and-language-selector",
        },
        /*#__PURE__*/ React.createElement(
          "div",
          {
            className: "language-selector-container",
          },
          /*#__PURE__*/ React.createElement(ModalLanguageSelector, {
            uiRegion: "footer",
            useLangPrefixedUrls: useLangPrefixedUrls,
            trigger: /*#__PURE__*/ React.createElement(LanguageSelectorButton, {
              "data-testid": "language-selector-button",
            }),
          })
        ),
        /*#__PURE__*/ React.createElement(Links, {
          linkColumns: footerStore.linkColumns,
        })
      ),
      /*#__PURE__*/ React.createElement(
        "div",
        {
          className: "logo-and-copyright",
        },
        /*#__PURE__*/ React.createElement(
          "div",
          {
            className: "logo-container",
            "data-testid": "logo-container",
          },
          /*#__PURE__*/ React.createElement(Logos, {
            isJpFooter: footerStore.isJpFooter,
          })
        ),
        !footerStore.isJpFooter &&
          /*#__PURE__*/ React.createElement(
            "div",
            {
              className: "copyright-container ud-text-xs",
            },
            `\u00A9 ${new Date().getFullYear()} Udemy, Inc.`
          )
      ),
      Config.brand.has_organization &&
        Config.brand.organization.is_enterprise_china &&
        /*#__PURE__*/ React.createElement(
          "div",
          {
            className: "sanjieke ud-text-xs",
          },
          /*#__PURE__*/ React.createElement(
            Button,
            {
              componentClass: "a",
              udStyle: "link",
              className: "white-link",
              typography: "ud-text-xs",
              href: "http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=11010102005771",
              target: "_blank",
              rel: "noopener noreferrer nofollow",
            },
            "京公网安备 11010102005771号"
          ),
          /*#__PURE__*/ React.createElement(
            "span",
            {
              className: "spacing",
            },
            "ICP证：京B2-20190453"
          ),
          /*#__PURE__*/ React.createElement(
            Button,
            {
              componentClass: "a",
              udStyle: "link",
              typography: "ud-text-xs",
              className: "white-link",
              href: "http://beian.miit.gov.cn/",
              target: "_blank",
              rel: "noopener noreferrer nofollow",
            },
            "京ICP备16034860号"
          )
        )
    ),
    isMounted &&
      Config.brand.has_organization &&
      /*#__PURE__*/ React.createElement(
        "div",
        {
          className: "ud-ufb-fixed-message-container",
        },
        ubIsLimitedConsumptionTrial &&
          limitedConsumptionTrial &&
          /*#__PURE__*/ React.createElement(LimitedConsumptionTrial, null)
      )
  );
});
export const Footer = (_ref2) => {
  let {
    clientProps,
    serverProps,
    limitedConsumptionTrial = false,
    useLangPrefixedUrls = true,
  } = _ref2;
  return /*#__PURE__*/ React.createElement(
    FooterContextProvider,
    {
      clientProps: clientProps,
      serverProps: serverProps,
      limitedConsumptionTrial: limitedConsumptionTrial,
    },
    /*#__PURE__*/ React.createElement(FooterImplementation, {
      useLangPrefixedUrls: useLangPrefixedUrls,
    })
  );
};
//# sourceMappingURL=footer.react-component.js.map
