import Cookies from "js-cookie";
const populateAcceptLanguageHeader = () => {
  var _Cookies$get;
  const cookies =
    (_Cookies$get = Cookies.get()) !== null && _Cookies$get !== void 0
      ? _Cookies$get
      : {};
  if (cookies.ud_locale) {
    // Convert locale string to Accept-Language standard
    const udLocaleConverted = cookies.ud_locale.split("_").join("-");
    return {
      // eslint-disable-next-line @typescript-eslint/naming-convention
      "Accept-Language": udLocaleConverted,
    };
  }
};
const DEFAULT_FETCHER_CONFIG = {
  getUrl: () => "/api/2022-03/graphql/",
  getHeaders: () => ({}),
};
export function createFetcher(_ref) {
  let {
    getUrl = DEFAULT_FETCHER_CONFIG.getUrl,
    getHeaders = DEFAULT_FETCHER_CONFIG.getHeaders,
  } = _ref;
  const fetcher = (query, variables, options) => {
    return async () => {
      /**
       * Because of the graphql-codegen library, we're not able to change the signature of this function. It's hard
       * coded to the codegen itself. So we couldn't change the options parameter to RequestInit.
       * Introduced in this https://github.com/dotansimha/graphql-code-generator/pull/7371
       *
       * Therefore, we needed to implicitly give the signal parameter to options
       */
      let signal;
      if (options && "_signal" in options) {
        signal = options._signal;
        delete options._signal;
      }
      const res = await fetch(getUrl(), {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          ...populateAcceptLanguageHeader(),
          ...getHeaders(options !== null && options !== void 0 ? options : {}),
          ...(options !== null && options !== void 0 ? options : {}),
        },
        body: JSON.stringify({
          query,
          variables,
        }),
        signal,
      });
      const json = await res.json();
      if (json.errors) {
        const { message } = json.errors[0] || "Error..";
        throw new Error(message);
      }
      return json.data;
    };
  };
  return fetcher;
}
//# sourceMappingURL=create-fetcher.js.map
