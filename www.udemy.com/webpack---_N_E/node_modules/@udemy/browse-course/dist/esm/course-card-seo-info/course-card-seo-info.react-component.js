import { observer } from "mobx-react";
import React from "react";
import { useI18n, useFormatNumber } from "@udemy/i18n";
import { getNumLecturesText, getPriceInfo } from "@udemy/react-card-components";
import { useStores } from "@udemy/store-provider";
import {
  CoursePriceStore,
  PriceStatus,
} from "../course-price-store/course-price-store";
/**
 * Component to render hidden course detail elements for SEO. For the course price, it
 * first checks to see if the course prop has pricing info. If it does, that info is used.
 * Otherwise, it looks at the CoursePriceStore to find pricing info for the course. This scenario
 * is the most common since we typically load course prices asynchronously.
 */
export const CourseCardSeoInfo = observer((_ref) => {
  let { course } = _ref;
  const { gettext, interpolate, ninterpolate } = useI18n();
  const { formatNumber } = useFormatNumber();
  const [coursePriceStore] = useStores([CoursePriceStore]);
  let priceSeoNodes = [];
  if (course.discount || course.price_detail) {
    priceSeoNodes = getPriceNodes(course);
  } else {
    const coursePrice = coursePriceStore.priceMap.get(course.id);
    if (coursePrice && coursePrice.status === PriceStatus.PRICE_STATUS_LOADED) {
      priceSeoNodes = getPriceNodes(coursePrice);
    }
  }
  function getNumReviewsAriaLabel(numReviews) {
    return ninterpolate("%(count)s review", "%(count)s reviews", numReviews, {
      count: numReviews,
    });
  }
  function getRatingAriaLabel(rating, total) {
    const label = gettext("Rating: %(rating)s out of %(total)s");
    return interpolate(
      label,
      {
        rating: formatNumber(Number(rating), {
          maximumFractionDigits: 1,
          minimumFractionDigits: 1,
        }),
        total,
      },
      true
    );
  }
  function getPriceNodes(priceObject) {
    const priceInfo = getPriceInfo(priceObject);
    const nodes = [];
    if (priceInfo.discountPrice && priceInfo.discountPriceString) {
      if (priceInfo.discountPrice === 0) {
        nodes.push(
          /*#__PURE__*/ React.createElement(
            "span",
            {
              key: "current",
              "data-testid": "seo-current-price",
            },
            gettext("Free")
          )
        );
      } else {
        nodes.push(
          /*#__PURE__*/ React.createElement(
            "span",
            {
              key: "current",
              "data-testid": "seo-current-price",
            },
            `${gettext("Current price")}: ${priceInfo.discountPriceString}`
          )
        );
      }
      if (
        priceInfo.listPrice &&
        priceInfo.listPriceString &&
        priceInfo.listPrice > priceInfo.discountPrice
      ) {
        nodes.push(
          /*#__PURE__*/ React.createElement(
            "span",
            {
              key: "original",
              "data-testid": "seo-original-price",
            },
            `${gettext("Original price")}: ${priceInfo.listPriceString}`
          )
        );
      }
    }
    return nodes;
  }
  return /*#__PURE__*/ React.createElement(
    "div",
    {
      className: "ud-sr-only",
      "aria-hidden": true,
    },
    /*#__PURE__*/ React.createElement(
      "span",
      {
        "data-testid": "seo-headline",
      },
      course.headline
    ),
    /*#__PURE__*/ React.createElement(
      "span",
      {
        "data-testid": "seo-rating",
      },
      getRatingAriaLabel(course.rating, 5)
    ),
    /*#__PURE__*/ React.createElement(
      "span",
      {
        "data-testid": "seo-num-reviews",
      },
      getNumReviewsAriaLabel(course.num_reviews)
    ),
    !!course.content_info &&
      /*#__PURE__*/ React.createElement(
        "span",
        {
          "data-testid": "seo-content-info",
        },
        course.content_info
      ),
    !!course.num_published_lectures &&
      /*#__PURE__*/ React.createElement(
        "span",
        {
          "data-testid": "seo-num-lectures",
        },
        getNumLecturesText(course.num_published_lectures, {
          ninterpolate,
        })
      ),
    !!course.instructional_level_simple &&
      /*#__PURE__*/ React.createElement(
        "span",
        {
          "data-testid": "seo-instructional-level",
        },
        course.instructional_level_simple
      ),
    priceSeoNodes
  );
});
//# sourceMappingURL=course-card-seo-info.react-component.js.map
