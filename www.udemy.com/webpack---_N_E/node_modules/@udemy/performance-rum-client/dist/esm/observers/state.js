/**
 * Create an object that can be used to share information between performance observers
 * `metrics` - Used to track metrics
 *
 * @returns {InternalState} - state object to coordinate between performance observers
 */
export function createState() {
  return {
    metrics: {
      cls: 0,
      tbt: 0,
    },
  };
}

/**
 * Limits max time
 * @param {number} timing - time representing performance timeline start
 * @returns {number}
 */
export function limitPerformanceTiming(timing) {
  let defaultMaxAllowed =
    arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 60000;
  return timing < defaultMaxAllowed ? timing : defaultMaxAllowed;
}
//# sourceMappingURL=state.js.map
