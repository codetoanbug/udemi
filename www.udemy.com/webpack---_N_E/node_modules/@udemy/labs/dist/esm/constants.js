import BarChartIcon from "@udemy/icons/dist/bar-chart.ud-icon";
import CloudIcon from "@udemy/icons/dist/cloud.ud-icon";
import CodeIcon from "@udemy/icons/dist/code.ud-icon";
import SecurityIcon from "@udemy/icons/dist/security.ud-icon";
import ServerIcon from "@udemy/icons/dist/server.ud-icon";
export const LAB_VERTICAL = Object.freeze({
  aws: {
    key: "aws",
    label(gettext) {
      return gettext("AWS");
    },
    glyph: "cloud",
    iconComponent: CloudIcon,
  },
  azure: {
    key: "azure",
    label(gettext) {
      return gettext("Azure");
    },
    glyph: "cloud",
    iconComponent: CloudIcon,
  },
  gcp: {
    key: "gcp",
    label(gettext) {
      return gettext("Google Cloud Provider");
    },
    glyph: "cloud",
    iconComponent: CloudIcon,
  },
  web: {
    key: "web",
    label(gettext) {
      return gettext("Web");
    },
    glyph: "code",
    iconComponent: CodeIcon,
  },
  data_science: {
    key: "data_science",
    label(gettext) {
      return gettext("Data Science");
    },
    glyph: "bar-chart",
    iconComponent: BarChartIcon,
  },
  devops: {
    key: "devops",
    label(gettext) {
      return gettext("DevOps");
    },
    glyph: "server",
    iconComponent: ServerIcon,
  },
  security: {
    key: "security",
    label(gettext) {
      return gettext("Security");
    },
    glyph: "security",
    iconComponent: SecurityIcon,
  },
});
export const TOPIC_TO_LAB_VERTICAL_MAP = Object.freeze({
  4452: "aws",
  6716: "azure",
  8322: "web",
  5336: "data_science",
  5404: "devops",
  5988: "gcp",
});
export const LAB_INSTANCE_STATUS = {
  starting: "starting",
  running: "running",
  queued: "queued",
  stopping: "stopping",
  stopped: "stopped",
  killing: "killing",
  killed: "killed",
  admin_killing: "admin_killing",
  admin_killed: "admin_killed",
  deactivated: "deactivated",
  error: "error",
};
export const LAB_LANDING_PAGE_URL = "/labs/listing/";
export const LAB_STATUS = {
  pending_create: "creating",
  draft: "draft",
  in_review: "in_review",
  pending_publish: "publishing",
  published: "published",
  unpublished: "unpublished",
  deleted: "deleted",
};
export const LAB_ACCESS_LEVEL = {
  base: "base",
  test_creator: "test-creator",
  edit: "edit",
  full: "full",
  admin: "admin",
  admin_eng: "admin-eng",
};
export const LAB_MODE = {
  FOLLOW_ALONG: "follow_along",
  STRUCTURED: "structured",
  OPEN: "open",
};
export const labLoadingUrl = (labId) => `/labs/${labId}/loading/`;
export const LABS_MODULAR_URL_PATTERN = "/labs/";
export const LAB_CLICK_TRACKING_ACTIONS = Object.freeze({
  END_CONFIRM: "end_confirm",
});
export const LAB_TYPE = Object.freeze({
  workspace: {
    key: "workspace",
    label(gettext) {
      return gettext("Workspace");
    },
  },
  modular: {
    key: "modular",
    label(gettext) {
      return gettext("Modular Lab");
    },
  },
  dev_workspace: {
    // development workspace for instructors, which is used temporarily for testing ideas
    key: "dev_workspace",
    label(gettext) {
      return gettext("Instructor Development Workspace");
    },
  },
});
export const LAB_LAUNCHER_FEEDBACK = Object.freeze({
  TERMINATE_LAB_FEEDBACK(gettext) {
    return gettext(
      "There was a problem terminating your lab. Please refresh your browser and try again."
    );
  },
});
//# sourceMappingURL=constants.js.map
