import { Tracker } from "@udemy/event-tracking";
import { LabActionEvent } from "../events/lab-action-event";
import { LabsResumeBannerContinueClickEvent } from "../events/labs-resume-banner-continue-click-event";
import { LabsResumeBannerDismissClickEvent } from "../events/labs-resume-banner-dismiss-click-event";
import { LabsResumeBannerEndLabClickEvent } from "../events/labs-resume-banner-end-lab-click-event";
import { LabsResumeBannerViewEvent } from "../events/labs-resume-banner-view-event";
export const sendLabsResumeBannerViewEvent = (labInstance) => {
  var _labInstance$lab$enro;
  const eventData = {
    labId: labInstance.lab.id,
    labInstanceUuid: labInstance.uuid,
    labVertical: labInstance.lab.vertical,
    labCompletionMode:
      (_labInstance$lab$enro = labInstance.lab.enrollment) === null ||
      _labInstance$lab$enro === void 0
        ? void 0
        : _labInstance$lab$enro.last_attempted_mode,
  };
  Tracker.publishEvent(new LabsResumeBannerViewEvent(eventData));
};
export const sendLabsResumeBannerContinueClickEvent = (labInstance) => {
  var _labInstance$lab$enro2;
  const eventData = {
    labId: labInstance.lab.id,
    labInstanceUuid: labInstance.uuid,
    labVertical: labInstance.lab.vertical,
    labCompletionMode:
      (_labInstance$lab$enro2 = labInstance.lab.enrollment) === null ||
      _labInstance$lab$enro2 === void 0
        ? void 0
        : _labInstance$lab$enro2.last_attempted_mode,
  };
  Tracker.publishEvent(new LabsResumeBannerContinueClickEvent(eventData));
};
export const sendLabsResumeBannerDismissClickEvent = (labInstance) => {
  var _labInstance$lab$enro3;
  const eventData = {
    labId: labInstance.lab.id,
    labInstanceUuid: labInstance.uuid,
    labVertical: labInstance.lab.vertical,
    labCompletionMode:
      (_labInstance$lab$enro3 = labInstance.lab.enrollment) === null ||
      _labInstance$lab$enro3 === void 0
        ? void 0
        : _labInstance$lab$enro3.last_attempted_mode,
  };
  Tracker.publishEvent(new LabsResumeBannerDismissClickEvent(eventData));
};
export const sendLabsResumeBannerEndLabClickEvent = (labInstance) => {
  var _labInstance$lab$enro4;
  const eventData = {
    labId: labInstance.lab.id,
    labInstanceUuid: labInstance.uuid,
    labVertical: labInstance.lab.vertical,
    labCompletionMode:
      (_labInstance$lab$enro4 = labInstance.lab.enrollment) === null ||
      _labInstance$lab$enro4 === void 0
        ? void 0
        : _labInstance$lab$enro4.last_attempted_mode,
  };
  Tracker.publishEvent(new LabsResumeBannerEndLabClickEvent(eventData));
};
export const sendLabClickEvent = function (
  labInstance,
  action,
  labTaskId,
  labTaskResourceId,
  inSessionTimeBetweenViewAndCtaClick,
  uiRegion,
  labCompletionMode
) {
  let hasAutomatedLabReview =
    arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;
  const eventData = {
    action,
    hasAutomatedLabReview,
    inSessionTimeBetweenViewAndCtaClick:
      inSessionTimeBetweenViewAndCtaClick || null,
    labCompletionMode:
      labCompletionMode ||
      (labInstance === null || labInstance === void 0
        ? void 0
        : labInstance.lab.enrollment.last_attempted_mode),
    labId:
      labInstance === null || labInstance === void 0
        ? void 0
        : labInstance.id.toString(),
    labInstanceUuid:
      (labInstance === null || labInstance === void 0
        ? void 0
        : labInstance.uuid) || null,
    labTaskId:
      (labTaskId === null || labTaskId === void 0
        ? void 0
        : labTaskId.toString()) || null,
    labTaskResourceId:
      (labTaskResourceId === null || labTaskResourceId === void 0
        ? void 0
        : labTaskResourceId.toString()) || null,
    labVertical:
      labInstance === null || labInstance === void 0
        ? void 0
        : labInstance.lab.vertical,
    uiRegion: uiRegion || null,
  };
  const eventObject = new LabActionEvent(eventData);
  Tracker.publishEvent(eventObject);
};
//# sourceMappingURL=events.js.map
