import _applyDecoratedDescriptor from "@babel/runtime/helpers/applyDecoratedDescriptor";
var _class, _class2;
import autobind from "autobind-decorator";
import { observer } from "mobx-react";
import React from "react";
import { withI18n } from "@udemy/i18n";
import { Button } from "@udemy/react-core-components";
import { Modal } from "@udemy/react-dialog-components";
import { FooterButtons } from "@udemy/react-structure-components";
import { LAB_CLICK_TRACKING_ACTIONS } from "../constants";
import {
  sendLabClickEvent,
  sendLabsResumeBannerEndLabClickEvent,
} from "./events";
let InternalLabsLearningDismissModal =
  observer(
    (_class =
      ((_class2 = class InternalLabsLearningDismissModal extends (
        React.Component
      ) {
        async onConfirm() {
          this.props.labsLearningBannerStore.hideModal();
          sendLabClickEvent(
            this.props.labsLearningBannerStore.firstRunningLab,
            LAB_CLICK_TRACKING_ACTIONS.END_CONFIRM
          );
          sendLabsResumeBannerEndLabClickEvent(
            this.props.labsLearningBannerStore.firstRunningLab
          );
          await this.props.labsLearningBannerStore.terminateLab(
            this.props.gettext
          );
        }
        render() {
          const { isOpen, labsLearningBannerStore } = this.props;
          return /*#__PURE__*/ React.createElement(
            Modal,
            {
              title: this.props.gettext(
                "Would you like to terminate this lab?"
              ),
              isOpen: isOpen,
              onClose: labsLearningBannerStore.hideModal,
            },
            /*#__PURE__*/ React.createElement(
              "div",
              null,
              this.props.gettext(
                "Ending the lab will reset the workspace and all data stored in the current session will be deleted."
              )
            ),
            /*#__PURE__*/ React.createElement(
              FooterButtons,
              null,
              /*#__PURE__*/ React.createElement(
                Button,
                {
                  "data-purpose": "cancel-confirm-modal",
                  onClick: labsLearningBannerStore.hideModal,
                  udStyle: "ghost",
                },
                this.props.gettext("Cancel")
              ),
              /*#__PURE__*/ React.createElement(
                Button,
                {
                  "data-purpose": "submit-confirm-modal",
                  onClick: this.onConfirm,
                },
                this.props.gettext("End lab")
              )
            )
          );
        }
      }),
      _applyDecoratedDescriptor(
        _class2.prototype,
        "onConfirm",
        [autobind],
        Object.getOwnPropertyDescriptor(_class2.prototype, "onConfirm"),
        _class2.prototype
      ),
      _class2))
  ) || _class;
export const LabsLearningDismissModal = withI18n(
  InternalLabsLearningDismissModal
);
//# sourceMappingURL=labs-learning-dismiss-modal.react-component.js.map
