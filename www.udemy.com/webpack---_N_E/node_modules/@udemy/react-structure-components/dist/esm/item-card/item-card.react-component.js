import classNames from "classnames";
import React from "react";
import styles from "./item-card.module.css";

/** The ItemCardImageWrapper component. */
export const ItemCardImageWrapper = (_ref) => {
  let { className, children, ...divProps } = _ref;
  return /*#__PURE__*/ React.createElement(
    "div",
    Object.assign({}, divProps, {
      className: classNames(
        className,
        "ud-custom-focus-target",
        styles["image-wrapper"]
      ),
    }),
    children
  );
};
/** The ItemCardTitle component. */

export const ItemCardTitle = (_ref2) => {
  let { className, children, ...anchorProps } = _ref2;
  return /*#__PURE__*/ React.createElement(
    "a",
    Object.assign({}, anchorProps, {
      className: classNames(
        className,
        "ud-focus-visible-target",
        styles["item-card-title"]
      ),
    }),
    children
  );
};
/**
 * The ItemCard component.
 *
 * @privateRemarks
 * This component uses Object.assign to skirt around TypeScript type errors regarding the
 * two components it exposes:
 *
 * - ItemCard.Title the {@link ItemCardTitle} component
 * - ItemCard.ImageWrapper the {@link ItemCardImageWrapper} component
 */

export const ItemCard = Object.assign(
  /*#__PURE__*/ React.forwardRef((_ref3, ref) => {
    let { className, children, ...divProps } = _ref3;
    return /*#__PURE__*/ React.createElement(
      "div",
      Object.assign({}, divProps, {
        ref: ref,
        className: classNames(
          className,
          "ud-custom-focus-visible",
          styles["item-card"]
        ),
      }),
      children
    );
  }),
  {
    // eslint-disable-next-line @typescript-eslint/naming-convention
    Title: ItemCardTitle,
    // eslint-disable-next-line @typescript-eslint/naming-convention
    ImageWrapper: ItemCardImageWrapper,
  }
);
//# sourceMappingURL=item-card.react-component.js.map
