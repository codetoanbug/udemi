import _initializerDefineProperty from "@babel/runtime/helpers/initializerDefineProperty";
import _applyDecoratedDescriptor from "@babel/runtime/helpers/applyDecoratedDescriptor";
import _initializerWarningHelper from "@babel/runtime/helpers/initializerWarningHelper";
var _dec,
  _dec2,
  _dec3,
  _dec4,
  _dec5,
  _dec6,
  _class,
  _descriptor,
  _descriptor2,
  _descriptor3,
  _descriptor4,
  _descriptor5,
  _descriptor6;
import Cookies from "js-cookie";
import { action, computed, extendObservable, observable } from "mobx";
import { ShoppingClient } from "@udemy/shopping";
import { udLink } from "@udemy/ud-data";
export let HeaderStore =
  ((_dec = observable.ref),
  (_dec2 = observable.ref),
  (_dec3 = observable.ref),
  (_dec4 = observable.ref),
  (_dec5 = observable.ref),
  (_dec6 = observable.ref),
  ((_class = class HeaderStore {
    /**
     * See props in get_ud_header_react_app_props
     * for appProps structure.
     */
    constructor(props) {
      var _props$shoppingClient;
      this.isInstructorSignupEnabled = void 0;
      this.mobileAppLink = void 0;
      this.shoppingClient = void 0;
      this.tryUFBPlacements = void 0;
      this.ufbContext = void 0;
      /**
       * See ud_header in user_specific_ud_header_context
       * for userSpecificContext structure.
       */
      _initializerDefineProperty(
        this,
        "userSpecificContext",
        _descriptor,
        this
      );
      _initializerDefineProperty(this, "formActionParams", _descriptor2, this);
      _initializerDefineProperty(
        this,
        "isPersonalPlanSubscriber",
        _descriptor3,
        this
      );
      _initializerDefineProperty(this, "showCartDropdown", _descriptor4, this);
      _initializerDefineProperty(
        this,
        "enableCartOnMobileNav",
        _descriptor5,
        this
      );
      _initializerDefineProperty(
        this,
        "showInstructorDropdown",
        _descriptor6,
        this
      );
      this.isFeaturedQuestionsEnabled = void 0;
      this.isPayoutSettingsEnabled = void 0;
      this.isRevenueReportEnabled = void 0;
      this.isDisplayPracticeInsightsNewPageWithFunnelViewEnabled = false;
      this.isInstructorSignupEnabled = props.isInstructorSignupEnabled;
      this.mobileAppLink = props.mobileAppLink;
      this.shoppingClient =
        (_props$shoppingClient = props.shoppingClient) !== null &&
        _props$shoppingClient !== void 0
          ? _props$shoppingClient
          : ShoppingClient;
      this.tryUFBPlacements = props.tryUFBPlacements;
      this.ufbContext = props.ufbContext;
    }
    get notificationBadgeContext() {
      var _Cookies$get, _this$ufbContext;
      const { user } = this.userSpecificContext;
      const context = {
        unreadActivityNotifications: user
          ? user.num_of_unread_activity_notifications
          : 0,
        unreadMessages: user ? user.num_unread_threads : 0,
        unseenCredits: parseInt(
          (_Cookies$get = Cookies.get("ud_credit_unseen")) !== null &&
            _Cookies$get !== void 0
            ? _Cookies$get
            : "0",
          10
        ),
        cartBuyables: 0,
        unreadAlerts: 0,
      };
      if (this.shoppingClient) {
        context.cartBuyables = this.shoppingClient.lists.cart.items.length;
      } else {
        context.cartBuyables = user ? user.num_of_buyables_in_cart : 0;
      }
      Object.assign(
        context,
        ((_this$ufbContext = this.ufbContext) === null ||
        _this$ufbContext === void 0
          ? void 0
          : _this$ufbContext.badgeContext) || {}
      );
      Object.values(context).forEach((count) => {
        context.unreadAlerts += count;
      });
      return context;
    }
    get signupParams() {
      if (this.isInstructorSignupEnabled) {
        return {
          showInstructorSignup: true,
          popupTrackingIdentifier: "bai_header",
          nextPath: this.urls.INSTRUCTOR_ONBOARDING,
        };
      }
      return {};
    }
    get urls() {
      var _this$ufbContext2, _this$ufbContext2$url;
      const { isInstructor } = this.userSpecificContext;
      const ufburls =
        (_this$ufbContext2 = this.ufbContext) === null ||
        _this$ufbContext2 === void 0
          ? void 0
          : (_this$ufbContext2$url = _this$ufbContext2.urls) === null ||
            _this$ufbContext2$url === void 0
          ? void 0
          : _this$ufbContext2$url.call(_this$ufbContext2, isInstructor);
      return {
        BROWSE: "/",
        SEARCH: "/courses/search/",
        SEARCH_SUGGESTIONS: "/search-suggestions/",
        TEACH: isInstructor ? "/instructor/" : "/teaching/?ref=teach_header",
        MY_LEARNING: "/home/my-courses/",
        MY_PROGRAMS: "/home/my-courses/programs/",
        MY_COURSES: "/home/my-courses/learning/",
        PREMIUM_COURSES: "/home/my-courses/premium/",
        WISHLIST: "/home/my-courses/wishlist/",
        CART: "/cart/",
        VIEW_NOTIFICATIONS: isInstructor
          ? "/instructor/user/view-notifications/"
          : "/user/view-notifications/",
        EDIT_NOTIFICATIONS: isInstructor
          ? "/instructor/account/notifications/"
          : "/user/edit-notifications/",
        MESSAGES: "/message/",
        INVITE: "/invite/",
        PAYMENT_METHODS: "/user/edit-payment-methods/",
        CREDITS: "/dashboard/credit-history/",
        PURCHASE_HISTORY: "/dashboard/purchase-history/",
        SUBSCRIPTION_MANAGEMENT: "/user/manage-subscriptions/",
        SUPPORT: "/support/",
        ACCOUNT: isInstructor
          ? "/instructor/account/security/"
          : "/user/edit-account/",
        EDIT_PROFILE: isInstructor
          ? "/instructor/profile/basic-information/"
          : "/user/edit-profile/",
        INSTRUCTOR_ONBOARDING: "/home/teaching/onboarding/teaching-experience/",
        ...(ufburls !== null && ufburls !== void 0 ? ufburls : {}),
      };
    }
    get instructorURLs() {
      return {
        ...this.urls,
        COMMUNITY: udLink.toInstructorCommunity(),
        TEST_VIDEO: "/home/teaching/test-video/",
        API_CLIENTS: "/instructor/account/api/",
        CLOSE_ACCOUNT: "/instructor/account/close/",
        EDIT_NOTIFICATIONS: "/instructor/account/notifications/",
        ACCOUNT: "/instructor/account/security/",
        ANNOUNCEMENTS: "/instructor/communication/announcements/",
        ASSIGNMENTS: "/instructor/communication/assignments/",
        FEATURED_QUESTIONS: "/instructor/communication/featured_questions/",
        MESSAGES: "/instructor/communication/messages/",
        Q_AND_A: "/instructor/communication/qa/",
        COURSES: "/instructor/courses/",
        MARKETPLACE_INSIGHTS: "/instructor/marketplace-insights/",
        EDIT_PROFILE: "/instructor/profile/basic-information/",
        EDIT_PHOTO: "/instructor/profile/photo/",
        EDIT_PRIVACY: "/instructor/profile/privacy/",
        PAYOUT_SETTINGS: "/instructor/user/edit-instructor-info/",
        VIEW_NOTIFICATIONS: "/instructor/user/view-notifications/",
        REVENUE_REPORT: "/revenue-report/",
        SUPPORT: "/support/?type=instructor",
        TEACH_HUB: "/udemy-teach-hub/?ref=teach_header",
      };
    }
    setUserSpecificContext(context) {
      if (context.user) {
        const { num_of_unread_activity_notifications, ...user } = context.user;
        extendObservable(user, {
          num_of_unread_activity_notifications,
        });
        context.user = user;
        if (context.user.consumer_subscription_active) {
          this.isPersonalPlanSubscriber = true;
          this.formActionParams = {
            ...this.formActionParams,
            subs_filter_type: "subs_only",
          };
          this.showCartDropdown = false;
          this.enableCartOnMobileNav = true;
          this.showInstructorDropdown = !!context.isInstructor;
        }
      }
      this.userSpecificContext = context;
    }

    // Implement in subclasses
    getInstructorPerformancePaths() {
      throw new Error("Not implemented");
    }
  }),
  ((_descriptor = _applyDecoratedDescriptor(
    _class.prototype,
    "userSpecificContext",
    [_dec],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function () {
        return {};
      },
    }
  )),
  (_descriptor2 = _applyDecoratedDescriptor(
    _class.prototype,
    "formActionParams",
    [_dec2],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function () {
        return {
          src: "ukw",
        };
      },
    }
  )),
  (_descriptor3 = _applyDecoratedDescriptor(
    _class.prototype,
    "isPersonalPlanSubscriber",
    [_dec3],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function () {
        return false;
      },
    }
  )),
  (_descriptor4 = _applyDecoratedDescriptor(
    _class.prototype,
    "showCartDropdown",
    [_dec4],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function () {
        return true;
      },
    }
  )),
  (_descriptor5 = _applyDecoratedDescriptor(
    _class.prototype,
    "enableCartOnMobileNav",
    [_dec5],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function () {
        return false;
      },
    }
  )),
  (_descriptor6 = _applyDecoratedDescriptor(
    _class.prototype,
    "showInstructorDropdown",
    [_dec6],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: function () {
        return true;
      },
    }
  )),
  _applyDecoratedDescriptor(
    _class.prototype,
    "notificationBadgeContext",
    [computed],
    Object.getOwnPropertyDescriptor(
      _class.prototype,
      "notificationBadgeContext"
    ),
    _class.prototype
  ),
  _applyDecoratedDescriptor(
    _class.prototype,
    "urls",
    [computed],
    Object.getOwnPropertyDescriptor(_class.prototype, "urls"),
    _class.prototype
  ),
  _applyDecoratedDescriptor(
    _class.prototype,
    "instructorURLs",
    [computed],
    Object.getOwnPropertyDescriptor(_class.prototype, "instructorURLs"),
    _class.prototype
  ),
  _applyDecoratedDescriptor(
    _class.prototype,
    "setUserSpecificContext",
    [action],
    Object.getOwnPropertyDescriptor(_class.prototype, "setUserSpecificContext"),
    _class.prototype
  )),
  _class));
//# sourceMappingURL=header.mobx-store.js.map
