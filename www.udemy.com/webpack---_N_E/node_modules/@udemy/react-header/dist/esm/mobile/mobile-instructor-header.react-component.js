import { observer } from "mobx-react";
import React, { useEffect } from "react";
import { useI18n } from "@udemy/i18n";
import MenuIcon from "@udemy/icons/dist/menu.ud-icon";
import { IconButton } from "@udemy/react-core-components";
import { SmartBar } from "@udemy/smart-bar";
import { HeaderContextProvider } from "../contexts/header-context";
import { loadCommonAppContext } from "../external/load-common-app-context";
import { InstructorHeaderStore } from "../instructor-header.mobx-store";
import baseStyles from "./mobile-header.module.css";
import styles from "./mobile-instructor-header.module.css";
import { MobileIAInstructorNav } from "./mobile-nav/mobile-ia-instructor-nav.react-component";
import { MobileNavStore } from "./mobile-nav/mobile-nav.mobx-store";
export const MobileInstructorHeader = observer((_ref) => {
  let { isInsideDesktopHeader = false, ...props } = _ref;
  const [headerStore] = React.useState(() => new InstructorHeaderStore(props));
  const [ufbStores] = React.useState(() => {
    var _props$ufbContext, _props$ufbContext$cre;
    return (_props$ufbContext = props.ufbContext) === null ||
      _props$ufbContext === void 0
      ? void 0
      : (_props$ufbContext$cre = _props$ufbContext.createStores) === null ||
        _props$ufbContext$cre === void 0
      ? void 0
      : _props$ufbContext$cre.call(_props$ufbContext, headerStore);
  });
  const [mobileNavStore] = React.useState(() => new MobileNavStore());
  const { gettext, locale } = useI18n();
  useEffect(() => {
    (async () => {
      const isUFB = !!props.ufbContext;
      const response = await loadCommonAppContext(locale, isUFB);
      headerStore.setUserSpecificContext(response.data.header);
    })();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  if (!props.isLoggedIn) {
    return null; // Instructor header requires login.
  }

  return /*#__PURE__*/ React.createElement(
    HeaderContextProvider,
    Object.assign(
      {
        headerStore: headerStore,
        mobileNavStore: mobileNavStore,
        ufbContext: props.ufbContext,
      },
      ufbStores
    ),
    /*#__PURE__*/ React.createElement(
      React.Fragment,
      null,
      !isInsideDesktopHeader &&
        /*#__PURE__*/ React.createElement(SmartBar, null),
      /*#__PURE__*/ React.createElement(
        "div",
        {
          className: `${baseStyles.header} ${styles.header}`,
        },
        /*#__PURE__*/ React.createElement(
          "div",
          {
            className: `${baseStyles.row}`,
          },
          /*#__PURE__*/ React.createElement(
            IconButton,
            {
              udStyle: "ghost",
              cssToggleId: "header-toggle-side-nav",
              className: "ud-mobile-header-btn",
              "data-purpose": "side-menu-opener",
            },
            /*#__PURE__*/ React.createElement(MenuIcon, {
              label: gettext("Open side drawer"),
            })
          )
        )
      ),
      /*#__PURE__*/ React.createElement(MobileIAInstructorNav, null)
    )
  );
});
//# sourceMappingURL=mobile-instructor-header.react-component.js.map
