import React from "react";
import { UFB_BROWSE_TYPE } from "../ufb-browse-types";
import { createUFBContext as createUFBMobileContext } from "../ufb-mobile/create-ufb-context";
import { BrowseButtons } from "./browse/browse-buttons.react-component";
import { BrowseNavCustomCategories } from "./browse/browse-nav-custom-categories.react-component";
import { BrowseNavLearningPathFolders } from "./browse/browse-nav-learning-path-folders.react-component";
import { BrowseNavLevelOneItems } from "./browse/browse-nav-level-one-items.react-component";
import { ManageDropdown } from "./manage/manage-dropdown.react-component";
import { PackageAlert } from "./manage/package-alert.react-component";
import { ProFeaturesPopover } from "./user-profile/pro-features-popover.react-component";
export function createUFBContext(udData, i18n) {
  var _udData$Config$featur, _udData$Config$featur2, _udData$Config$featur3;
  const mobileContext = createUFBMobileContext(udData, i18n);
  const isLearningPathEnabled =
    (_udData$Config$featur = udData.Config.features) === null ||
    _udData$Config$featur === void 0
      ? void 0
      : (_udData$Config$featur2 = _udData$Config$featur.organization) ===
          null || _udData$Config$featur2 === void 0
      ? void 0
      : (_udData$Config$featur3 = _udData$Config$featur2.learning_path) ===
          null || _udData$Config$featur3 === void 0
      ? void 0
      : _udData$Config$featur3.enabled;
  return {
    mobileContext,
    urls: mobileContext.urls,
    badgeContext: mobileContext.badgeContext,
    logo: mobileContext.logo,
    browseNavDropdownText: isLearningPathEnabled
      ? i18n.gettext("Explore")
      : undefined,
    get browseButtons() {
      return /*#__PURE__*/ React.createElement(BrowseButtons, null);
    },
    instructorDropdownText: isLearningPathEnabled
      ? i18n.gettext("Teach")
      : i18n.gettext("Instructor"),
    prospectiveInstructorDropdownText: isLearningPathEnabled
      ? i18n.gettext("Teach")
      : i18n.gettext("Create a course"),
    prospectiveInstructorHeadline: i18n.gettext(
      "Create or add custom courses to share within your organization."
    ),
    prospectiveInstructorCTAText: i18n.gettext("Try it now"),
    get packageAlert() {
      return /*#__PURE__*/ React.createElement(PackageAlert, null);
    },
    get manageDropdown() {
      return /*#__PURE__*/ React.createElement(ManageDropdown, null);
    },
    get proFeaturesPopover() {
      return /*#__PURE__*/ React.createElement(ProFeaturesPopover, null);
    },
    getBrowseNavLevelOneItems(itemFinders) {
      return /*#__PURE__*/ React.createElement(BrowseNavLevelOneItems, {
        itemFinders: itemFinders,
      });
    },
    getBrowseNavLevelTwoItems(selectedLevelOneItem) {
      if (selectedLevelOneItem.type === UFB_BROWSE_TYPE.LEARNING_PATHS) {
        return /*#__PURE__*/ React.createElement(
          BrowseNavLearningPathFolders,
          null
        );
      }
      if (selectedLevelOneItem.type === UFB_BROWSE_TYPE.CUSTOM_CATEGORIES) {
        return /*#__PURE__*/ React.createElement(
          BrowseNavCustomCategories,
          null
        );
      }
      return null;
    },
  };
}
//# sourceMappingURL=create-ufb-context.js.map
