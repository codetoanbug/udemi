import React from "react";
import { useI18n } from "@udemy/i18n";
import { BlockList } from "@udemy/react-core-components";
import { BrowseNavItem } from "../../desktop/browse/browse-nav.react-component";
import styles from "../../desktop/list-menu.module.css";
import { useBrowseNavStore } from "../../hooks/use-browse-nav-store";
import { useHeaderStore } from "../../hooks/use-header-store";
export const BrowseNavLearningPathFolders = () => {
  var _browseNavStore$selec, _browseNavStore$selec2, _browseNavStore$selec3;
  const headerStore = useHeaderStore();
  const browseNavStore = useBrowseNavStore();
  const { gettext } = useI18n();
  return /*#__PURE__*/ React.createElement(
    React.Fragment,
    null,
    /*#__PURE__*/ React.createElement(
      BlockList,
      {
        size: "small",
        className: styles["section"],
        iconAlignment: "right",
      },
      /*#__PURE__*/ React.createElement(
        BlockList.Item,
        {
          "data-id": "all-learning-paths",
          href:
            (_browseNavStore$selec = browseNavStore.selectedLevelOneItem) ===
              null || _browseNavStore$selec === void 0
              ? void 0
              : _browseNavStore$selec.absolute_url,
          color: "neutral",
          className: styles["item"],
        },
        gettext("All paths")
      ),
      /*#__PURE__*/ React.createElement(
        BlockList.Item,
        {
          "data-id": "my-learning-paths",
          href: headerStore.urls.MY_LEARNING_PATHS,
          color: "neutral",
          className: styles["item"],
        },
        gettext("My edited paths")
      )
    ),
    /*#__PURE__*/ React.createElement(
      BlockList,
      {
        size: "small",
        className: styles["section"],
        iconAlignment: "right",
      },
      (_browseNavStore$selec2 = browseNavStore.selectedLevelOneItem) === null ||
        _browseNavStore$selec2 === void 0
        ? void 0
        : (_browseNavStore$selec3 = _browseNavStore$selec2.children) === null ||
          _browseNavStore$selec3 === void 0
        ? void 0
        : _browseNavStore$selec3.map((item) =>
            /*#__PURE__*/ React.createElement(BrowseNavItem, {
              key: item.id,
              navItem: item,
              href: item.absolute_url,
              id: `header-browse-nav-${item.type}-${item.id}`,
            })
          )
    )
  );
};
//# sourceMappingURL=browse-nav-learning-path-folders.react-component.js.map
