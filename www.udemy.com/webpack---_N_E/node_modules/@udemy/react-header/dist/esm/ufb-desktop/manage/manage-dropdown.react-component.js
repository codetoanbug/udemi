import { observer } from "mobx-react";
import React from "react";
import { LocalizedHtml, useI18n } from "@udemy/i18n";
import { BlockList } from "@udemy/react-core-components";
import { Badge } from "@udemy/react-messaging-components";
import headerStyles from "../../desktop/desktop-header.module.css";
import {
  HeaderButton,
  HeaderDropdown,
  HeaderMenu,
} from "../../desktop/header-dropdown.react-component";
import menuStyles from "../../desktop/list-menu.module.css";
import { useHeaderStore } from "../../hooks/use-header-store";
export const ManageDropdown = observer(() => {
  const headerStore = useHeaderStore();
  const { gettext } = useI18n();
  const renderMenuItem = (item, key) => {
    return /*#__PURE__*/ React.createElement(
      BlockList.Item,
      {
        key: key,
        href: item.url,
        color: "neutral",
        "data-intercom-target": item.id,
      },
      item.is_beta
        ? /*#__PURE__*/ React.createElement(LocalizedHtml, {
            html: interpolate(
              gettext('%(title)s <span class="beta">Beta</span>'),
              {
                title: item.title,
              },
              true
            ),
            interpolate: {
              beta: /*#__PURE__*/ React.createElement(Badge, {
                className: menuStyles["beta"],
              }),
            },
          })
        : item.title
    );
  };
  const { organizationState, organizationManageMenu } =
    headerStore.userSpecificContext;
  if (
    !(
      organizationState !== null &&
      organizationState !== void 0 &&
      organizationState.should_show_manage_menu
    )
  ) {
    return null;
  }
  return /*#__PURE__*/ React.createElement(
    HeaderDropdown,
    {
      trigger: /*#__PURE__*/ React.createElement(
        HeaderButton,
        {
          "data-intercom-target": "header.manage-ufb",
        },
        gettext("Manage")
      ),
      className: `${menuStyles["list-menu-container"]} ${headerStyles["gap-button"]}`,
    },
    /*#__PURE__*/ React.createElement(
      HeaderMenu,
      null,
      /*#__PURE__*/ React.createElement(
        BlockList,
        {
          size: "small",
          className: menuStyles["section"],
        },
        organizationManageMenu.map(renderMenuItem)
      )
    )
  );
});
//# sourceMappingURL=manage-dropdown.react-component.js.map
