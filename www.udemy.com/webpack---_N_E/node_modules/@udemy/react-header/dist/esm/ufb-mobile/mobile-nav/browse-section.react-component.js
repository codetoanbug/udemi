import { observer } from "mobx-react";
import React from "react";
import { useI18n } from "@udemy/i18n";
import { range } from "@udemy/shared-utils";
import { useUDData } from "@udemy/ud-data";
import { useHeaderStore } from "../../hooks/use-header-store";
import { useMobileNavStore } from "../../hooks/use-mobile-nav-store";
import { useUfbModels } from "../../hooks/use-ufb-models";
import {
  MobileNavSectionHeading,
  MobileNavSection,
  MobileNavItem,
} from "../../mobile/mobile-nav/mobile-nav.react-component";
export const BrowseSection = observer(() => {
  const udData = useUDData();
  const udConfig = udData.Config;
  const { gettext } = useI18n();
  const headerStore = useHeaderStore();
  const mobileNavStore = useMobileNavStore();
  const { customCategoriesModel, learningPathsMenuModel } = useUfbModels();
  function showBadgingNavChangesForPPUB() {
    const { user } = headerStore.userSpecificContext;
    return user === null || user === void 0
      ? void 0
      : user.show_updated_pp_and_ub_navigation;
  }
  function renderCategories() {
    return /*#__PURE__*/ React.createElement(
      React.Fragment,
      null,
      /*#__PURE__*/ React.createElement(
        MobileNavSectionHeading,
        null,
        showBadgingNavChangesForPPUB()
          ? gettext("Explore by category")
          : gettext("All categories")
      ),
      /*#__PURE__*/ React.createElement(
        MobileNavSection,
        null,
        mobileNavStore.navigationCategories
          ? mobileNavStore.navigationCategories.map((c) =>
              /*#__PURE__*/ React.createElement(
                MobileNavItem,
                {
                  key: c.id,
                  cssToggleId: `header-toggle-side-nav-subcategories-of-${c.id}`,
                  "data-purpose": "category-item",
                },
                c.title
              )
            )
          : range(13).map((i) =>
              /*#__PURE__*/ React.createElement(MobileNavItem, {
                key: i,
                loading: true,
              })
            )
      )
    );
  }
  const learningPathsLink = !udConfig.features.organization.learning_path
    .enabled
    ? null
    : /*#__PURE__*/ React.createElement(
        MobileNavItem,
        {
          cssToggleId: "header-toggle-side-nav-learning-path-folders",
        },
        learningPathsMenuModel.title
      );
  const hasCustomCategories = customCategoriesModel.children.length > 0;
  const customCategoriesLink = !hasCustomCategories
    ? null
    : /*#__PURE__*/ React.createElement(
        MobileNavItem,
        {
          cssToggleId: "header-toggle-side-nav-custom-categories",
        },
        customCategoriesModel.title
      );
  if (!learningPathsLink && !customCategoriesLink) {
    return renderCategories();
  }
  return /*#__PURE__*/ React.createElement(
    React.Fragment,
    null,
    /*#__PURE__*/ React.createElement(
      MobileNavSectionHeading,
      null,
      gettext("My organization")
    ),
    /*#__PURE__*/ React.createElement(
      MobileNavSection,
      null,
      learningPathsLink,
      customCategoriesLink
    ),
    renderCategories()
  );
});
//# sourceMappingURL=browse-section.react-component.js.map
