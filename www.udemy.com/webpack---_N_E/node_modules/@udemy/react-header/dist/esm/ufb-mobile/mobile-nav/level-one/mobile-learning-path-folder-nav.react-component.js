import { observer } from "mobx-react";
import React, { useEffect } from "react";
import { useI18n } from "@udemy/i18n";
import { useHeaderStore } from "../../../hooks/use-header-store";
import { useUfbModels } from "../../../hooks/use-ufb-models";
import {
  MobileNavL1Nav,
  MobileNavSection,
  MobileNavItem,
} from "../../../mobile/mobile-nav/mobile-nav.react-component";
export const MobileLearningPathFolderNav = observer(() => {
  const headerStore = useHeaderStore();
  const { learningPathsMenuModel } = useUfbModels();
  const { gettext } = useI18n();
  useEffect(() => {
    learningPathsMenuModel.loadChildren();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  return /*#__PURE__*/ React.createElement(
    MobileNavL1Nav,
    {
      id: "header-toggle-side-nav-learning-path-folders",
    },
    /*#__PURE__*/ React.createElement(
      MobileNavSection,
      null,
      /*#__PURE__*/ React.createElement(
        MobileNavItem,
        {
          href: learningPathsMenuModel.absolute_url,
        },
        gettext("All paths")
      ),
      /*#__PURE__*/ React.createElement(
        MobileNavItem,
        {
          href: headerStore.urls.MY_LEARNING_PATHS,
        },
        gettext("My edited paths")
      )
    ),
    /*#__PURE__*/ React.createElement(
      MobileNavSection,
      null,
      learningPathsMenuModel.children.map((folder) =>
        /*#__PURE__*/ React.createElement(
          MobileNavItem,
          {
            key: folder.id,
            href: folder.absolute_url,
          },
          folder.title
        )
      )
    )
  );
});
//# sourceMappingURL=mobile-learning-path-folder-nav.react-component.js.map
