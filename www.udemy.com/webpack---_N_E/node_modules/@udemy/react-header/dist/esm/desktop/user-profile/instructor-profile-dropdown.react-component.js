/* eslint-disable react/jsx-no-target-blank */
import { observer } from "mobx-react";
import React from "react";
import { UFBNoticeClickEvent } from "@udemy/browse-event-tracking";
import { Tracker } from "@udemy/event-tracking";
import { useI18n } from "@udemy/i18n";
import OpenInNewIcon from "@udemy/icons/dist/open-in-new.ud-icon";
import { toBusinessUdemy } from "@udemy/organization";
import { Avatar, BlockList } from "@udemy/react-core-components";
import { useUDData } from "@udemy/ud-data";
import {
  ProfileBadge,
  UnreadActivityNotificationsBadge,
} from "../../badges.react-component";
import { useHeaderStore } from "../../hooks/use-header-store";
import headerStyles from "../desktop-header.module.css";
import {
  HeaderButton,
  HeaderDropdown,
  HeaderMenu,
} from "../header-dropdown.react-component";
import menuStyles from "../list-menu.module.css";
import styles from "./user-profile-dropdown.module.css";
export const InstructorProfileDropdown = observer((_ref) => {
  let { className } = _ref;
  const headerStore = useHeaderStore();
  const { gettext, locale } = useI18n();
  const { Config } = useUDData();
  const handleTryUFBClick = () => {
    if (headerStore.tryUFBPlacements) {
      var _headerStore$tryUFBPl;
      Tracker.publishEvent(
        new UFBNoticeClickEvent({
          locale,
          placement:
            (_headerStore$tryUFBPl = headerStore.tryUFBPlacements) === null ||
            _headerStore$tryUFBPl === void 0
              ? void 0
              : _headerStore$tryUFBPl.profile,
        })
      );
    }
  };
  const renderUfbSection = () => {
    var _tryUFBPlacements$pro;
    const { tryUFBPlacements } = headerStore;
    const { productLink } = headerStore.userSpecificContext;
    const hasOrganization = Config.brand.has_organization;
    return !hasOrganization && productLink
      ? /*#__PURE__*/ React.createElement(
          "a",
          {
            className: styles["try-ufb-section"],
            href: toBusinessUdemy("request-demo", {
              ref:
                (_tryUFBPlacements$pro =
                  tryUFBPlacements === null || tryUFBPlacements === void 0
                    ? void 0
                    : tryUFBPlacements.profile) !== null &&
                _tryUFBPlacements$pro !== void 0
                  ? _tryUFBPlacements$pro
                  : "",
            }),
            target: productLink.isOnsiteRequestDemo ? undefined : "_blank",
            rel: productLink.isOnsiteRequestDemo ? undefined : "noopener",
            onClick: handleTryUFBClick,
          },
          /*#__PURE__*/ React.createElement(
            "div",
            null,
            /*#__PURE__*/ React.createElement(
              "div",
              {
                className: "ud-heading-md",
              },
              "Udemy Business"
            ),
            /*#__PURE__*/ React.createElement(
              "div",
              {
                className: `ud-text-sm ${styles["try-ufb-subtitle"]}`,
              },
              gettext("Bring learning to your company")
            )
          ),
          /*#__PURE__*/ React.createElement(OpenInNewIcon, {
            size: "medium",
            label: false,
          })
        )
      : null;
  };
  const { instructorURLs } = headerStore;
  const { user } = headerStore.userSpecificContext;
  return /*#__PURE__*/ React.createElement(
    HeaderDropdown,
    {
      trigger: /*#__PURE__*/ React.createElement(
        HeaderButton,
        {
          componentClass: "a",
          href: instructorURLs.EDIT_PROFILE,
          udStyle: "image",
          "aria-label": gettext("My profile"),
          "data-purpose": "user-dropdown",
        },
        /*#__PURE__*/ React.createElement(Avatar, {
          user: user,
          alt: "NONE",
          size: "small",
          "aria-hidden": "true",
          className: styles["dropdown-button-avatar"],
        }),
        /*#__PURE__*/ React.createElement(ProfileBadge, {
          dot: true,
          className: headerStyles["dropdown-dot-badge"],
        })
      ),
      className: `${className} ${menuStyles["list-menu-container"]}`,
    },
    /*#__PURE__*/ React.createElement(
      HeaderMenu,
      null,
      /*#__PURE__*/ React.createElement(
        "a",
        {
          href: instructorURLs.EDIT_PROFILE,
          className: styles["user-section"],
        },
        /*#__PURE__*/ React.createElement(Avatar, {
          user: user,
          alt: "NONE",
        }),
        /*#__PURE__*/ React.createElement(
          "div",
          {
            className: styles["user-details"],
          },
          /*#__PURE__*/ React.createElement(
            "div",
            null,
            /*#__PURE__*/ React.createElement(
              "div",
              {
                className: "ud-heading-md",
              },
              user.display_name
            ),
            /*#__PURE__*/ React.createElement(
              "div",
              {
                className: `ud-text-xs ${styles["email"]}`,
              },
              user.email
            )
          )
        )
      ),
      /*#__PURE__*/ React.createElement(
        BlockList,
        {
          size: "small",
          className: menuStyles["section"],
          iconAlignment: "right",
        },
        Config.brand.is_teaching_enabled &&
          /*#__PURE__*/ React.createElement(
            BlockList.Item,
            {
              color: "neutral",
              href: instructorURLs.BROWSE,
            },
            Config.brand.has_organization
              ? gettext("Learner")
              : gettext("Student")
          )
      ),
      /*#__PURE__*/ React.createElement(
        BlockList,
        {
          size: "small",
          className: menuStyles["section"],
          iconAlignment: "right",
        },
        Config.features.notifications &&
          /*#__PURE__*/ React.createElement(
            BlockList.Item,
            {
              color: "neutral",
              href: instructorURLs.VIEW_NOTIFICATIONS,
              icon: /*#__PURE__*/ React.createElement(
                UnreadActivityNotificationsBadge,
                null
              ),
            },
            gettext("Notifications")
          )
      ),
      /*#__PURE__*/ React.createElement(
        BlockList,
        {
          size: "small",
          className: menuStyles["section"],
          iconAlignment: "right",
        },
        /*#__PURE__*/ React.createElement(
          BlockList.Item,
          {
            color: "neutral",
            href: instructorURLs.ACCOUNT,
          },
          gettext("Account settings")
        ),
        headerStore.isPayoutSettingsEnabled &&
          /*#__PURE__*/ React.createElement(
            BlockList.Item,
            {
              color: "neutral",
              href: instructorURLs.PAYOUT_SETTINGS,
            },
            gettext("Payout & tax settings")
          ),
        headerStore.isRevenueReportEnabled &&
          /*#__PURE__*/ React.createElement(
            BlockList.Item,
            {
              color: "neutral",
              href: instructorURLs.REVENUE_REPORT,
            },
            gettext("Revenue report")
          )
      ),
      /*#__PURE__*/ React.createElement(
        BlockList,
        {
          size: "small",
          className: menuStyles["section"],
          iconAlignment: "right",
        },
        !!(
          Config.brand.is_profile_functions_enabled &&
          Config.brand.is_user_profiles_public &&
          user.url
        ) &&
          /*#__PURE__*/ React.createElement(
            BlockList.Item,
            {
              color: "neutral",
              href: user.url,
              target: "_blank",
              rel: "nofollow noopener noreferrer",
            },
            gettext("Public profile")
          ),
        /*#__PURE__*/ React.createElement(
          BlockList.Item,
          {
            color: "neutral",
            href: instructorURLs.EDIT_PROFILE,
          },
          gettext("Edit profile")
        )
      ),
      /*#__PURE__*/ React.createElement(
        BlockList,
        {
          size: "small",
          className: menuStyles["section"],
          iconAlignment: "right",
        },
        /*#__PURE__*/ React.createElement(
          BlockList.Item,
          {
            color: "neutral",
            href: instructorURLs.SUPPORT,
            target: "_blank",
            rel: "noopener noreferrer",
          },
          gettext("Help")
        ),
        /*#__PURE__*/ React.createElement(
          BlockList.Item,
          {
            color: "neutral",
            href: user.logout_url,
          },
          gettext("Log out")
        )
      ),
      renderUfbSection()
    )
  );
});
//# sourceMappingURL=instructor-profile-dropdown.react-component.js.map
