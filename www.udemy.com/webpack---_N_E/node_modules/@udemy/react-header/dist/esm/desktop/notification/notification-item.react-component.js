import { observer } from "mobx-react";
import React from "react";
import { useI18n } from "@udemy/i18n";
import { Avatar } from "@udemy/react-core-components";
import { RelativeDuration } from "@udemy/react-date-time-components";
import { NotificationBadge } from "@udemy/react-messaging-components";
import { ItemCard } from "@udemy/react-structure-components";
import { safelySetInnerHTML } from "@udemy/shared-utils";
import { useActivityNotificationsStore } from "../../hooks/use-activity-notifications-store";
import styles from "./notification-item.module.css";
export const NotificationItem = observer((_ref) => {
  let { className = "", notification, tabName, ...anchorProps } = _ref;
  const activityNotificationsStore = useActivityNotificationsStore();
  const { gettext } = useI18n();
  function onClick() {
    if (!notification.isRead) {
      activityNotificationsStore === null ||
      activityNotificationsStore === void 0
        ? void 0
        : activityNotificationsStore.markNotificationAsRead(
            notification,
            tabName
          );
    }
  }
  return /*#__PURE__*/ React.createElement(
    ItemCard,
    {
      className: className,
      "data-testid": "notification-item",
    },
    /*#__PURE__*/ React.createElement(
      ItemCard.ImageWrapper,
      null,
      /*#__PURE__*/ React.createElement(Avatar, {
        user: notification.mainActivity.actor,
        srcKey: "image_100x100",
        alt: "NONE",
      })
    ),
    /*#__PURE__*/ React.createElement(
      "div",
      {
        className: styles["notification-info"],
      },
      /*#__PURE__*/ React.createElement(
        ItemCard.Title,
        Object.assign(
          {
            className: `ud-heading-sm ${styles["notification-title"]}`,
          },
          anchorProps,
          {
            href: notification.targetURL,
            onClick: onClick,
          }
        ),
        /*#__PURE__*/ React.createElement(
          "span",
          safelySetInnerHTML({
            descriptionOfCaller: "notification-item:notification-template",
            html: notification.template,
          })
        )
      ),
      /*#__PURE__*/ React.createElement(
        "div",
        {
          className: `ud-text-sm ${styles["notification-timestamp"]}`,
        },
        /*#__PURE__*/ React.createElement(RelativeDuration, {
          datetime: notification.mainActivity.timestamp,
        })
      ),
      !notification.isRead &&
        /*#__PURE__*/ React.createElement(NotificationBadge, {
          label: gettext("This notification is not read"),
          className: styles["unread-dot"],
          "data-testid": "notification-badge",
        })
    )
  );
});
//# sourceMappingURL=notification-item.react-component.js.map
