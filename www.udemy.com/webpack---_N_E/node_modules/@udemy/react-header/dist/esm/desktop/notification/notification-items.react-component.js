import { observer } from "mobx-react";
import React from "react";
import { TAB_NAMES } from "@udemy/activity-notifications";
import { formatNumber, useI18n } from "@udemy/i18n";
import { Tabs } from "@udemy/react-structure-components";
import { useActivityNotificationsStore } from "../../hooks/use-activity-notifications-store";
import { useHeaderStore } from "../../hooks/use-header-store";
import menuStyles from "../panel-menu.module.css";
import styles from "./notification-items.module.css";
import {
  NotificationTabPane,
  NotificationItemsSkeleton,
  ZeroNotificationItems,
} from "./notification-tab-pane.react-component";
export const NotificationItemsHeading = observer(() => {
  const headerStore = useHeaderStore();
  const { gettext } = useI18n();
  return /*#__PURE__*/ React.createElement(
    "div",
    {
      className: `${menuStyles["section-heading"]} ${menuStyles["gap-bottom"]}`,
    },
    /*#__PURE__*/ React.createElement(
      "div",
      {
        className: `ud-heading-lg ${menuStyles["section-heading-title"]}`,
      },
      gettext("Notifications")
    ),
    headerStore.userSpecificContext.user &&
      /*#__PURE__*/ React.createElement(
        "a",
        {
          className: `ud-heading-sm ${menuStyles["section-heading-link"]}`,
          href: headerStore.urls.EDIT_NOTIFICATIONS,
        },
        gettext("Settings")
      )
  );
});
export const NotificationItems = observer(() => {
  const activityNotificationsStore = useActivityNotificationsStore();
  const { gettext, locale } = useI18n();
  const store = activityNotificationsStore;
  const tabNames = Object.keys(TAB_NAMES).filter((tabName) => store[tabName]);
  let content;
  if (store.user && tabNames.length === 0) {
    content = /*#__PURE__*/ React.createElement(ZeroNotificationItems, null);
  } else if (store.user && tabNames.length === 1) {
    content = /*#__PURE__*/ React.createElement(NotificationTabPane, {
      tabName: store.activeTabName,
    });
  } else if (!store.user || !store.activeTabName) {
    content = /*#__PURE__*/ React.createElement(
      NotificationItemsSkeleton,
      null
    );
  } else {
    content = /*#__PURE__*/ React.createElement(
      Tabs,
      {
        fullWidth: true,
        size: "small",
      },
      tabNames.map((tabName) => {
        const { loadingState, unreadActivitiesCount } = store[tabName];
        const instructorText = gettext("Instructor");
        const studentText = gettext("Student");
        let title = tabName === "instructor" ? instructorText : studentText;
        if (loadingState === "LOADED" && unreadActivitiesCount > 0) {
          title = `${title} (${formatNumber(unreadActivitiesCount, locale)})`;
        }
        return /*#__PURE__*/ React.createElement(
          Tabs.Tab,
          {
            key: tabName,
            title: title,
          },
          /*#__PURE__*/ React.createElement(NotificationTabPane, {
            tabName: tabName,
          })
        );
      })
    );
  }
  return /*#__PURE__*/ React.createElement(
    "div",
    {
      className: styles["notification-items"],
    },
    /*#__PURE__*/ React.createElement(NotificationItemsHeading, null),
    content
  );
});
//# sourceMappingURL=notification-items.react-component.js.map
