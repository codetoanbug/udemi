import { observer } from "mobx-react";
import React from "react";
import { ExpressCheckoutButton } from "../express-checkout-button/express-checkout-button.react-component";

/**
 * Props for the `BuyButton` component. For details on what each prop means, refer
 * to the `ExpressCheckoutButton`
 */

/**
 * This component primarily just wraps the `ExpressCheckoutButton` and forwards its props in
 * the correct format
 */
export const BuyButton = observer((_ref) => {
  let {
    buy_url,
    text,
    size = "large",
    style = "brand",
    enrollment_disabled,
    event_type,
    eventTrackingContext,
    payment_data,
  } = _ref;
  const [isMounted, setIsMounted] = React.useState(false);
  React.useEffect(() => {
    setIsMounted(true);
  }, []);
  const isDisabled = !isMounted || enrollment_disabled;
  const clickEventData = payment_data
    ? {
        buyable: {
          id: payment_data.buyableId,
          type: payment_data.buyableType,
          trackingId:
            eventTrackingContext === null || eventTrackingContext === void 0
              ? void 0
              : eventTrackingContext.courseTrackingId,
        },
        eventType: event_type,
      }
    : undefined;
  return /*#__PURE__*/ React.createElement(ExpressCheckoutButton, {
    bsStyle: style,
    buttonText: text,
    checkoutUrl: buy_url,
    isDisabled: isDisabled,
    size: size,
    clickEventData: clickEventData,
  });
});

// TODO: CLP integration?
// export const BuyButton = injectCourseLandingPageData('buy_button', true)(BaseBuyButton);

// export const CacheableBuyButton = injectCourseLandingPageData(
//     'buy_button',
//     true,
// )(({button, eventTrackingContext}) => (
//     <BaseBuyButton {...button} eventTrackingContext={eventTrackingContext} />
// ));
//# sourceMappingURL=buy-button.react-component.js.map
