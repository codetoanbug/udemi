import classNames from "classnames";
import { observer } from "mobx-react";
import React from "react";
import { BuyNowEvent, EnrollNowEvent } from "@udemy/browse-event-tracking";
import { Tracker } from "@udemy/event-tracking";
import { useI18n } from "@udemy/i18n";
import { Button } from "@udemy/react-core-components";
import { serverOrClient } from "@udemy/shared-utils";
import { useUDData, useUDLink } from "@udemy/ud-data";
import { CheckoutReferrerHelper } from "./checkout-referrer-helper";
import styles from "./express-checkout-button.module.css";
// eslint-disable-next-line @typescript-eslint/no-explicit-any
const eventTypeToEvent = {
  enroll_now: EnrollNowEvent,
  buy_now: BuyNowEvent,
};

/**
 * Props for the `ExpressCheckoutButton` component
 */

export const ExpressCheckoutButton = observer((_ref) => {
  let {
    bsStyle = "brand",
    buttonText,
    checkoutUrl,
    isDisabled,
    size = "large",
    className,
    clickEventData,
  } = _ref;
  const udData = useUDData();
  const udLink = useUDLink();
  const { gettext } = useI18n();
  function redirectToCheckoutUrl() {
    // click tracking
    if (clickEventData) {
      const { buyable, eventType } = clickEventData;
      const Event = eventTypeToEvent[eventType];
      if (Event) {
        Tracker.publishEvent(
          new Event({
            buyable,
          })
        );
      }
    }
    CheckoutReferrerHelper.saveCheckoutReferrer();
    if (udData.me.is_authenticated) {
      serverOrClient.global.location.href = checkoutUrl;
    } else {
      const signupUrl = udLink.to("join", "signup-popup", {
        next: checkoutUrl,
      });
      serverOrClient.global.location.href = signupUrl;
    }
  }
  return /*#__PURE__*/ React.createElement(
    "div",
    null,
    /*#__PURE__*/ React.createElement(
      Button,
      {
        "data-testid": "buy-button",
        size: size,
        udStyle: bsStyle,
        onClick: redirectToCheckoutUrl,
        className: classNames(styles.button, className),
        disabled: isDisabled || udData.me.isLoading,
      },
      buttonText !== null && buttonText !== void 0
        ? buttonText
        : gettext("Buy now")
    )
  );
});
//# sourceMappingURL=express-checkout-button.react-component.js.map
