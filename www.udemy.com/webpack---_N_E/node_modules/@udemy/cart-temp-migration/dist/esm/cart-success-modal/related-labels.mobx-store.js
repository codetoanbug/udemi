import _initializerDefineProperty from "@babel/runtime/helpers/initializerDefineProperty";
import _applyDecoratedDescriptor from "@babel/runtime/helpers/applyDecoratedDescriptor";
import _initializerWarningHelper from "@babel/runtime/helpers/initializerWarningHelper";
var _class, _descriptor;
import { observable, runInAction } from "mobx";
import { udApi } from "@udemy/ud-api";
export let RelatedLabelsStore =
  ((_class = class RelatedLabelsStore {
    constructor(courseId, sourcePage, relatedLabels) {
      this.courseId = void 0;
      this.sourcePage = void 0;
      _initializerDefineProperty(this, "labels", _descriptor, this);
      this.loading = void 0;
      this.fetchLabels = async () => {
        if (this.labels) {
          this.loading = false;
          return;
        }
        const url = `/discovery-units/`;
        const params = {
          course_id: this.courseId,
          source_page: this.sourcePage,
          context: "course-related-topics",
        };
        try {
          this.loading = true;
          const response = await udApi.get(url, {
            params,
          });
          this.loading = false;
          runInAction(() => (this.labels = response.data.units[0].items));
        } catch (e) {
          this.loading = false;
        }
      };
      this.courseId = courseId;
      this.sourcePage = sourcePage;
      this.labels = relatedLabels;
      this.loading = false;
    }
  }),
  (_descriptor = _applyDecoratedDescriptor(
    _class.prototype,
    "labels",
    [observable],
    {
      configurable: true,
      enumerable: true,
      writable: true,
      initializer: null,
    }
  )),
  _class);
//# sourceMappingURL=related-labels.mobx-store.js.map
