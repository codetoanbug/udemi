import CollapseMinus from "@udemy/icons/dist/collapse-minus.ud-icon";
import TickIcon from "@udemy/icons/dist/tick.ud-icon";
import React from "react";
import { ToggleInput } from "../toggle-input/toggle-input.react-component";
const CheckboxState = {
  CHECKED: true,
  UNCHECKED: false,
  INDETERMINATE: "indeterminate",
};

/**
 * The Checkbox component.
 *
 * @privateRemarks
 * Renders a "fakeInput" (TickIcon or CollapseMinus) as a visual representation
 * of the checkbox state.
 *
 * The real mechanism for the checkbox is an internal {@link ToggleInput} component.
 */
export const Checkbox = (_ref) => {
  let { size = "small", checked, ...props } = _ref;
  const iconSizeMap = {
    small: "xsmall",
    large: "small",
  };
  let fakeInput = /*#__PURE__*/ React.createElement(TickIcon, {
    className: "ud-fake-toggle-input ud-fake-toggle-checkbox",
    color: "inherit",
    size: iconSizeMap[size],
    label: false,
  });

  if (checked === "indeterminate") {
    fakeInput = /*#__PURE__*/ React.createElement(CollapseMinus, {
      className: "ud-fake-toggle-input ud-fake-toggle-indeterminate-checkbox",
      color: "inherit",
      size: iconSizeMap[size],
      label: false,
    });
    checked = false;
  }

  return /*#__PURE__*/ React.createElement(
    ToggleInput,
    Object.assign({}, props, {
      checked: checked,
      size: size,
      fakeInput: fakeInput,
      inputType: "checkbox",
    })
  );
}; // Static property to be available externally

Checkbox.STATE = CheckboxState;
//# sourceMappingURL=checkbox.react-component.js.map
