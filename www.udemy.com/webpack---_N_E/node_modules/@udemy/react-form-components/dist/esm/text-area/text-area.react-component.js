/* eslint-disable @typescript-eslint/naming-convention */
import classNames from "classnames";
import { MobXProviderContext, observer } from "mobx-react";
import React from "react";
import { checkFormGroup } from "../form-group/check-form-group";
import styles from "./text-area.module.css";
/** React props for the TextArea component. */

/**
 * The TextArea component.
 *
 * @remarks
 * A Udemy implementation of a `<textarea>` HTML tag.
 *
 * This component requires global CSS from the `TextInput` component.
 * You must add this import to your application's `_app.tsx` global CSS import manifest:
 *
 * @example
 * `@import '~@udemy/react-form-components/dist/react-form-components.global.css';`
 */
export const TextArea = observer(
  /*#__PURE__*/ React.forwardRef((_ref, ref) => {
    let { size = "large", className, ...htmlProps } = _ref;
    // $$udFormGroup is the parent FormGroup passed down via a Context Provider
    const { $$udFormGroup } = React.useContext(MobXProviderContext);
    const ariaProps =
      $$udFormGroup === null || $$udFormGroup === void 0
        ? void 0
        : $$udFormGroup.inputAriaProps;
    checkFormGroup(
      "TextArea",
      {
        $$udFormGroup,
        ...htmlProps,
      },
      null,
      true
    );
    return /*#__PURE__*/ React.createElement(
      "textarea",
      Object.assign(
        {
          rows: "2",
          ref: ref,
        },
        ariaProps,
        htmlProps,
        {
          id: $$udFormGroup ? $$udFormGroup.id : htmlProps.id,
          className: classNames(
            "ud-text-input",
            [styles[`ud-text-area-${size}`]],
            {
              "ud-text-md": size === "large",
              "ud-text-sm": size === "small",
            },
            className
          ),
        }
      )
    );
  })
);
TextArea.displayName = "TextArea";
//# sourceMappingURL=text-area.react-component.js.map
