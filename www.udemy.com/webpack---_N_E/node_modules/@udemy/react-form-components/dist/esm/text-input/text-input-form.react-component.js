import { useI18n } from "@udemy/i18n";
import CloseIcon from "@udemy/icons/dist/close.ud-icon";
import { Button, IconButton, isIcon } from "@udemy/react-core-components";
import { noop } from "@udemy/shared-utils";
import classNames from "classnames";
import React from "react";
import styles from "./text-input-form.module.css";
import { TextInput } from "./text-input.react-component";
/** React props interface for the `TextInputForm` component. */

/**
 * The TextInputForm component.
 *
 * @remarks
 * A `<form>` tag wrapping a {@link TextInput} component.
 */
export const TextInputForm = (_ref) => {
  let {
    dataPurposes = {},
    onClearInput = noop,
    onSubmit = noop,
    showClearInputButton = false,
    size = "large",
    submitButtonProps = {},
    children,
    ...props
  } = _ref;
  const { gettext } = useI18n();
  const { submitButtonContent = gettext("Submit"), ...textInputProps } = props;
  const SubmitButton = isIcon(submitButtonContent) ? IconButton : Button;

  const onTextInputFormSubmit = (event) => {
    event.preventDefault();
    onSubmit(event);
  };

  return /*#__PURE__*/ React.createElement(
    "form",
    {
      "data-purpose": dataPurposes.form,
      onSubmit: onTextInputFormSubmit,
      className: classNames(styles["text-input-form"], {
        // eslint-disable-next-line @typescript-eslint/naming-convention
        [styles["form-with-clear-button"]]: showClearInputButton,
      }),
    },
    children !== null && children !== void 0
      ? children
      : /*#__PURE__*/ React.createElement(
          TextInput,
          Object.assign(
            {
              "data-purpose": dataPurposes.input,
              size: size,
            },
            textInputProps
          )
        ),
    showClearInputButton &&
      /*#__PURE__*/ React.createElement(
        IconButton,
        {
          onClick: onClearInput,
          udStyle: "ghost",
          size: size,
          className: styles["clear-button"],
        },
        /*#__PURE__*/ React.createElement(CloseIcon, {
          color: "neutral",
          label: gettext("Clear input"),
        })
      ),
    /*#__PURE__*/ React.createElement(
      SubmitButton,
      Object.assign(
        {
          type: "submit",
          size: size,
          "data-purpose": dataPurposes.submit,
          disabled: props.disabled,
        },
        submitButtonProps
      ),
      submitButtonContent
    )
  );
};
//# sourceMappingURL=text-input-form.react-component.js.map
