/* eslint-disable @typescript-eslint/naming-convention */
import classNames from "classnames";
import React from "react";
import { ToggleInput } from "../toggle-input/toggle-input.react-component"; // Retain string constants for size from ToggleInputProps, but make it required

/**
 * The FadeRadio component.
 *
 * @privateRemarks
 * This is used to render what looks like a Radio Button, but is just a stylized `<span>`
 * The real input is contained within a {@link ToggleInput} component.
 */
export const FakeRadio = (_ref) => {
  let { size, className } = _ref;
  return /*#__PURE__*/ React.createElement("span", {
    className: classNames(
      className,
      "ud-fake-toggle-input ud-fake-toggle-radio",
      {
        "ud-fake-toggle-radio-small": size === "small",
        "ud-fake-toggle-radio-large": size === "large",
      }
    ),
  });
};

/**
 * The Radio (radio button) component.
 *
 * @privateRemarks
 * Renders a "fakeInput" (a `span`) as a visual representation
 * of the radio button state.
 *
 * The real mechanism for the radio button is an internal {@link ToggleInput} component.
 */
export const Radio = (_ref2) => {
  let { size = "small", ...props } = _ref2;
  const fakeInput = /*#__PURE__*/ React.createElement(FakeRadio, {
    size: size,
  });
  return /*#__PURE__*/ React.createElement(
    ToggleInput,
    Object.assign(
      {
        size,
      },
      props,
      {
        fakeInput: fakeInput,
        inputType: "radio",
      }
    )
  );
};
Radio.$$udType = "Radio";
//# sourceMappingURL=radio.react-component.js.map
