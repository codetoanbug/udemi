var _dec, _class, _class2;
import hoistStatics from "hoist-non-react-statics";
import { inject, Provider } from "mobx-react";
import React from "react";
import { getDisplayName } from "../external/get-display-name";

// eslint-disable-next-line @typescript-eslint/no-explicit-any

export let TrackingContextProvider =
  ((_dec = inject((_ref) => {
    let { trackingContext } = _ref;
    return {
      parentTrackingContext: trackingContext,
    };
  })),
  _dec(
    (_class =
      ((_class2 = class TrackingContextProvider extends React.Component {
        constructor(props) {
          super(props);
          this.trackingContext = void 0;
          this.trackingContext = {
            ...props.parentTrackingContext,
            ...props.trackingContext,
          };
        }
        render() {
          return /*#__PURE__*/ React.createElement(
            Provider,
            {
              trackingContext: this.trackingContext,
            },
            React.Children.only(this.props.children)
          );
        }
      }),
      (_class2.defaultProps = {
        parentTrackingContext: {},
        trackingContext: {},
      }),
      _class2))
  ) || _class);
export const withTrackingContextProvider = (opts) => (WrappedComponent) => {
  const EnhancedComponent = (props) =>
    /*#__PURE__*/ React.createElement(
      TrackingContextProvider,
      {
        trackingContext: opts,
      },
      /*#__PURE__*/ React.createElement(WrappedComponent, props)
    );
  EnhancedComponent.displayName = `WithTrackingContextProvider(${getDisplayName(
    WrappedComponent
  )})`;
  return hoistStatics(EnhancedComponent, WrappedComponent);
};
//# sourceMappingURL=tracking-context-provider.react-component.js.map
