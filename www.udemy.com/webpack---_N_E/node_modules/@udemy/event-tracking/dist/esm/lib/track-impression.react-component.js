import _applyDecoratedDescriptor from "@babel/runtime/helpers/applyDecoratedDescriptor";
var _class, _class2;
import Observer from "@researchgate/react-intersection-observer";
import autobind from "autobind-decorator";
import React, { Component } from "react";
export let TrackImpression =
  ((_class =
    ((_class2 = class TrackImpression extends Component {
      constructor() {
        super(...arguments);
        this.recordedTimeout = void 0;
      }
      componentWillUnmount() {
        clearTimeout(this.recordedTimeout);
      }
      handleIntersection(event, unobserve) {
        const { trackFunc, onlyOnce, visibilityThreshold, minDuration } =
          this.props;
        if (
          event.isIntersecting &&
          event.intersectionRatio >= visibilityThreshold
        ) {
          this.recordedTimeout = setTimeout(() => {
            if (onlyOnce) {
              unobserve();
            }
            trackFunc();
          }, minDuration);
        } else {
          clearTimeout(this.recordedTimeout);
        }
      }
      render() {
        var _React$Children$only;
        const { children, isDev } = this.props;
        if (
          isDev === true &&
          children &&
          React.Children.count(children) === 1 &&
          ((_React$Children$only = React.Children.only(children)) === null ||
          _React$Children$only === void 0
            ? void 0
            : _React$Children$only.type
          ).displayName === TrackImpression.displayName
        ) {
          // In order to prevent a bug caused by nested Observers.
          // Details on https://udemy.slack.com/archives/C1TGV7X6F/p1600291892030700
          // and https://github.com/udemy/website-django/pull/46416
          throw Error(
            "Nesting TrackImpression components without a div in between is not allowed. Details in code"
          );
        }
        return /*#__PURE__*/ React.createElement(
          Observer,
          {
            onChange: this.handleIntersection,
            threshold: this.props.visibilityThreshold,
            rootMargin: this.props.rootMargin,
          },
          children
        );
      }
    }),
    (_class2.displayName = "TrackImpression"),
    (_class2.defaultProps = {
      onlyOnce: true,
      // setting the visibilityThreshold to 1 causes some children to never intersect;
      // not sure why, but .99 seems to fix it well enough
      visibilityThreshold: 0.99,
      minDuration: 500,
      rootMargin: "0px 0px 0px",
    }),
    _class2)),
  _applyDecoratedDescriptor(
    _class.prototype,
    "handleIntersection",
    [autobind],
    Object.getOwnPropertyDescriptor(_class.prototype, "handleIntersection"),
    _class.prototype
  ),
  _class);
//# sourceMappingURL=track-impression.react-component.js.map
