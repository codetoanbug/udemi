import Gettext from "node-gettext";
export function createGettextApi(translations, lang) {
  // Instantiate Gettext object
  const gt = new Gettext();
  const domain = "messages";
  const gtTranslations = {
    "": {},
  };
  for (const [key, value] of Object.entries(translations)) {
    const valueAsObj = value;
    if (valueAsObj.msgctxt) {
      gtTranslations[key] = value;
    } else {
      const translationContext = gtTranslations[""];
      const normalizedValue = typeof value === "string" ? [value] : value;
      translationContext[key] = {
        comments: {},
        msgid: key,
        msgstr: normalizedValue,
      };
    }
  }
  const getTextTranslations = {
    charset: "utf-8",
    translations: gtTranslations,
  };
  gt.addTranslations(lang, domain, getTextTranslations);
  gt.setLocale(lang);
  const interpolate = (e, t, n) => {
    if (n) {
      return e.replace(/%\(\w+\)s/g, function (e) {
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        return String(t[e.slice(2, -2)]);
      });
    } else {
      return e.replace(/%s/g, function () {
        return String(t.shift());
      });
    }
  };
  const ninterpolate = (singular, plural, count, namedContext) => {
    let context = [count];
    let named = false;
    if (namedContext) {
      context = namedContext;
      named = true;
    }

    // eslint-disable-next-line @udemy/no-variable-string
    return interpolate(gt.ngettext(singular, plural, count), context, named);
  };

  // *** IMPORTANT ***
  // These APIs need to be bound to the Gettext object, otherwise we will run into scoping issues when trying
  // to use them as desctructured functions, such as const {gettext} = useI18n()
  return {
    gettext: gt.gettext.bind(gt),
    dgettext: gt.dgettext.bind(gt),
    dngettext: gt.dngettext.bind(gt),
    dpgettext: gt.dpgettext.bind(gt),
    ngettext: gt.ngettext.bind(gt),
    npgettext: gt.npgettext.bind(gt),
    pgettext: gt.pgettext.bind(gt),
    interpolate,
    ninterpolate,
  };
}
//# sourceMappingURL=gettext-api.js.map
