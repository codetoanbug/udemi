import MoreIcon from '@udemy/icons/dist/more.ud-icon';
import {IconButton} from '@udemy/react-core-components';
import {Dropdown} from '@udemy/react-menu-components';
import autobind from 'autobind-decorator';
import {observer, inject} from 'mobx-react';
import PropTypes from 'prop-types';
import React, {Component} from 'react';
import {withRouter} from 'react-router-dom';

@inject('store')
@withRouter
@observer
export default class CaptionsActionMenu extends Component {
    static propTypes = {
        store: PropTypes.object.isRequired,
        history: PropTypes.shape({
            push: PropTypes.func.isRequired,
        }).isRequired,
    };

    @autobind
    removeLocaleAndRedirect() {
        return this.props.store.removeLocale().then((localeId) => {
            this.props.history.push(`${this.props.store.relativePath}/${localeId}/`);
        });
    }

    render() {
        const {
            canUserEditCourse,
            currentLanguageLoaded,
            isDefaultLocale,
            lectureCount,
            translationRecord,
            uncaptionedVideosCount,
            openBulkDownloadModal,
        } = this.props.store;
        const isDeletableLocale =
            currentLanguageLoaded &&
            !isDefaultLocale &&
            translationRecord &&
            !translationRecord.has_autogenerated_captions;

        const actions = [];

        if (lectureCount !== uncaptionedVideosCount) {
            actions.push(
                <Dropdown.MenuItem key="bulkDownload" onClick={openBulkDownloadModal}>
                    {gettext('Bulk download')}
                </Dropdown.MenuItem>,
            );
        }

        if (canUserEditCourse && isDeletableLocale) {
            actions.push(
                <Dropdown.MenuItem key="removeLanguge" onClick={this.removeLocaleAndRedirect}>
                    {gettext('Remove language')}
                </Dropdown.MenuItem>,
            );
        }

        if (actions.length) {
            return (
                <Dropdown
                    placement="bottom-end"
                    trigger={
                        <IconButton udStyle="ghost">
                            <MoreIcon label={gettext('Caption language options')} />
                        </IconButton>
                    }
                >
                    <Dropdown.Menu>{actions}</Dropdown.Menu>
                </Dropdown>
            );
        }

        return null;
    }
}
